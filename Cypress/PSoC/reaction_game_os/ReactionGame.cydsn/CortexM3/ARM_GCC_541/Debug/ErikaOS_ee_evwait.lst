ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ErikaOS_ee_evwait.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EE_oo_WaitEvent,"ax",%progbits
  20              		.align	2
  21              		.global	EE_oo_WaitEvent
  22              		.thumb
  23              		.thumb_func
  24              		.type	EE_oo_WaitEvent, %function
  25              	EE_oo_WaitEvent:
  26              	.LFB59:
  27              		.file 1 "Generated_Source\\PSoC5\\ErikaOS_ee_evwait.c"
   1:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  *
   4:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  *
   6:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  *
   8:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  *
  13:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  *
  18:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  *
  30:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * ERIKA Enterprise is distributed in the hope that it will be
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 2


  31:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  *
  35:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
  41:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** /*
  42:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * CVS: $Id: ee_evwait.c,v 1.3 2006/05/03 05:59:55 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  */
  45:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
  46:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** /*
  47:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  */
  51:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
  52:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #include "ErikaOS_ee_internal.inc"
  53:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
  54:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** /* WaitEvent:
  55:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****    - can be called from an extended task only
  56:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****    - the task state is put to wait until an event in the mask has been set
  57:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****    - if the task blocks -> reschedulig + internal resource released
  58:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****    - returns (only extended state)
  59:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****        E_OS_RESOURCE task occupies a resource
  60:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****        E_OS_ACCESS   if the task is not an extended task
  61:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****        E_OS_CALLEVEL called at interrupt level
  62:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** */
  63:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
  64:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
  65:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #ifndef __PRIVATE_WAITEVENT__
  66:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
  67:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** StatusType EE_oo_WaitEvent(EventMaskType Mask)
  68:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** {
  28              		.loc 1 68 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 38B5     		push	{r3, r4, r5, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 3, -16
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39              	.LBB86:
  40              	.LBB87:
  41              	.LBB88:
  42              		.file 2 "Generated_Source\\PSoC5\\ErikaOS_cortex_mx_ee_cpu.inc"
   1:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Copyright (C) 2002-2011  Evidence Srl
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 3


   5:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	@file ee_cpu.h
  43:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	@brief CPU-dependent part of HAL. Derived from pkg/cpu/pic30/inc/ee_cpu.h
  44:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** */ 
  48:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifndef __INCLUDE_CORTEX_MX_EE_CPU_H__
  56:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define __INCLUDE_CORTEX_MX_EE_CPU_H__
  57:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #include "ErikaOS_eecfg.inc"
  59:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  60:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 4


  62:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #include "ErikaOS_common_ee_compiler_gcc.inc"
  63:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
  64:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Initial stack offset (in words): Used in multistack. */
  66:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifndef CORTEX_MX_INIT_TOS_OFFSET
  67:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define CORTEX_MX_INIT_TOS_OFFSET 10
  68:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
  69:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /*************************************************************************
  71:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  HAL Types and structures
  72:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  *************************************************************************/
  73:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Primitive data types */
  75:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #include "ErikaOS_common_ee_types.inc"
  76:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UREG;
  78:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** typedef EE_INT32  EE_SREG;
  79:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_FREG;
  80:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define EE_UREG_SIZE 4
  81:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  82:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* boolean type */
  83:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifndef EE_TYPEBOOL
  84:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEBOOL;
  85:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
  86:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  87:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* boolean true define */
  88:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifndef EE_TRUE
  89:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define EE_TRUE ((EE_TYPEBOOL)1U)
  90:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
  91:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  92:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* boolean false define */
  93:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifndef EE_FALSE
  94:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define EE_FALSE ((EE_TYPEBOOL)0U)
  95:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
  96:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_PTR		volatile EE_UREG *
  98:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_ADDR(x)	((EE_HWREG_PTR)(x))
  99:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define	EE_HWREG(x)		(*EE_HWREG_ADDR(x))
 100:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 101:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
 102:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Get current SP */
 104:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** __INLINE__ EE_UINT32  __current_sp(void)
 105:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** {
 106:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** EE_UINT32 temp;
 107:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** __ASM ("mov %0, sp" : "=r" (temp) : );
 108:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** return temp;
 109:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** }
 110:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 111:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Set a breakpoint */
 112:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define __breakpoint(value)	__ASM ("bkpt "#value)
 113:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
 115:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 116:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* ISR Priority representation type */
 117:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEISR2PRIO;
 118:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 5


 119:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Thread IDs */
 120:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** typedef EE_INT32 EE_TID;
 121:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Thread IDs - unsigned version*/
 123:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UTID;
 124:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 125:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Used by the common layer to decide whether to start a new thread */
 126:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define TID_IS_STACKED_MARK 0x80000000
 127:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* EE_TYPEIRQ is currently unused */
 129:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 130:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* XXX: define EE_TIME? */
 131:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Use the "standard" implementation */
 133:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #include "ErikaOS_common_ee_hal_structs.inc"
 134:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /******************************************************************************
 136:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  Application dependent data types
 137:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 138:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 139:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef	__HAS_TYPES_H__
 140:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #include	"types.h"
 141:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
 142:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 143:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /******************************************************************************
 144:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  CPU Peripherals
 145:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 146:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __CORTEX_MX__
 148:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #include "ErikaOS_cortex_mx_ee_nvic.inc"
 149:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #include "ErikaOS_cortex_mx_ee_systick.inc"
 150:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
 151:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /******************************************************************************
 153:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  HAL Variables
 154:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 155:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 156:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __MULTI__
 157:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 158:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Top-of-stack of each private stack */
 159:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** extern struct EE_TOS EE_cortex_mx_system_tos[];
 160:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** //#define	EE_std_system_tos EE_cortex_mx_system_tos
 161:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 162:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Index of the current stack */
 163:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** extern EE_UREG EE_cortex_mx_active_tos;
 164:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define	EE_hal_active_tos EE_cortex_mx_active_tos
 165:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 166:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /*extern	EE_UREG EE_pic30_thread_tos[];
 167:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define	EE_std_thread_tos EE_pic30_thread_tos */
 168:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif /* __MULTI__ */
 169:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 170:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /*********************************************************************
 171:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  Cortex M0 interrupt disabling/enabling
 172:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  *********************************************************************/
 173:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 174:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Used to check the value returned by EE_cortex_mx_disableIRQ */
 175:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define EE_cortex_mx_are_IRQs_enabled(ie) ((ie) ^ 1)
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 6


 176:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 177:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /**
 178:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Enable interrupts
 179:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  */
 180:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_enableIRQ(void)
 181:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** {
 182:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 183:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsie i");
 184:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 185:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 186:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsie    i\n");
 187:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 188:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 189:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__enable_irq();
 190:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 191:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsie i");
 192:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 193:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 194:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 195:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** }
 196:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /**
 198:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Disable interrupts
 199:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  */
 200:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_disableIRQ(void)
 201:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** {
 202:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 203:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 204:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 205:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 206:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsid    i\n");
 207:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 208:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 209:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 210:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 211:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsid i");
 212:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 213:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 214:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 215:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** }
 216:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 217:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /**
 218:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Resume interrupts
 219:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  */
 220:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_resumeIRQ(EE_FREG f)
 221:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** {
 222:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 223:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__set_PRIMASK(f);
 224:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 225:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 226:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM ("    msr    primask, r0\n");
 227:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 228:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 229:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 230:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	PRIMASK = f;
 231:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 232:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM volatile("msr primask, %0" :: "r" (f));
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 7


 233:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 234:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 235:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 236:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** }
 237:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 238:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /**
 239:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Suspend interrupts
 240:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  */
 241:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** __INLINE__ EE_FREG  EE_cortex_mx_suspendIRQ(void)
 242:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** {
 243:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifndef __CCS__
 244:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	EE_FREG istat;
 245:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
 246:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 247:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	 istat = __get_PRIMASK();
 248:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 249:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 250:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 251:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM ("    mrs     r0, primask\n"
 252:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	       "    cpsid   i\n"
 253:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	       "    bx      lr\n");
 254:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 255:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 256:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 257:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	istat = PRIMASK;
 258:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 259:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 260:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("mrs %0, primask" : "=r" (istat) );
  43              		.loc 2 260 0
  44              		.syntax unified
  45              	@ 260 "Generated_Source\PSoC5\ErikaOS_cortex_mx_ee_cpu.inc" 1
  46 0002 EFF31084 		mrs r4, primask
  47              	@ 0 "" 2
  48              	.LVL1:
 261:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("cpsid i");
  49              		.loc 2 261 0
  50              	@ 261 "Generated_Source\PSoC5\ErikaOS_cortex_mx_ee_cpu.inc" 1
  51 0006 72B6     		cpsid i
  52              	@ 0 "" 2
  53              	.LVL2:
  54              		.thumb
  55              		.syntax unified
  56              	.LBE88:
  57              	.LBE87:
  58              	.LBE86:
  59              	.LBB89:
  60              	.LBB90:
  61              		.file 3 "Generated_Source\\PSoC5\\ErikaOS_ee_oo_internal.inc"
   1:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * and/or modify it under the terms of the GNU General Public License
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 8


  10:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * CVS: $Id: ee_internal.h,v 1.6 2006/12/03 22:07:50 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  */
  45:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
  46:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /*
  47:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  */
  51:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
  52:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifndef PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  53:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  54:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #include "ErikaOS_ee_oo_common.inc"
  56:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #include "ErikaOS_ee_oo_intfunc.inc"
  57:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #include "ErikaOS_ee_oo_irq.inc"
  58:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
  59:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /*******************************************************************************
  60:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  *                    New Error Handling Internal Utilities
  61:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  ******************************************************************************/
  62:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
  63:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Error Parameters Utilities Macros */
  64:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_PARAM(param_name)   EE_os_param param_name
  65:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_PARAM_VALUE(param_name, param_value)  \
  66:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   ((param_name).value_param = (param_value))
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 9


  67:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
  68:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_PARAM_REF(param_name, param_field, param_ref) \
  69:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   ((param_name).param_field = (param_ref))
  70:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
  71:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
  72:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Error Parameters Data Structure Utilities Macros from user space */
  73:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()  EE_oo_ErrorHook_parameters error_parameters
  74:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
  75:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  \
  76:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_oo_ErrorHook_parameters error_parameters = { param1_in, param2_in, \
  77:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     param3_in }
  78:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
  79:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value) \
  80:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   (error_parameters.param1.value_param = param1_value)
  81:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value) \
  82:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   (error_parameters.param2.value_param = param2_value)
  83:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value) \
  84:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   (error_parameters.param3.value_param = param3_value)
  85:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
  86:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)  \
  87:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   (error_parameters.param1.param_field = (param_ref))
  88:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)  \
  89:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   (error_parameters.param2.param_field = (param_ref))
  90:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)  \
  91:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   (error_parameters.param3.param_field = (param_ref))
  92:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
  93:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()                                    ((void)0)
  94:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
  95:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  ((void)0)
  96:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value)           ((void)0)
  98:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value)           ((void)0)
  99:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value)           ((void)0)
 100:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 101:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)    ((void)0)
 102:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)    ((void)0)
 103:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)    ((void)0)
 104:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 105:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 106:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Error Handling */
 107:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
 108:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifndef  __OO_ERRORHOOK_NOMACROS__
 109:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 110:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_os_fill_error_data( OSServiceIdType
 111:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   ServiceID, EE_os_param param1, EE_os_param param2, EE_os_param param3 )
 112:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 113:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   register EE_oo_ErrorHook_parameters * const
 114:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     p_errorhook_parameter = EE_oo_get_errorhook_data();
 115:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   (*EE_oo_get_errorhook_service_id()) = ServiceID;
 116:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   p_errorhook_parameter->param1 = param1;
 117:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   p_errorhook_parameter->param2 = param2;
 118:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   p_errorhook_parameter->param3 = param3;
 119:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 120:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #else /* !__OO_ERRORHOOK_NOMACROS__ */
 121:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_os_fill_error_data(ServiceID,param1,param2,param3) ((void)0)
 123:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* !__OO_ERRORHOOK_NOMACROS__ */
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 10


 124:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 125:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error( OSServiceIdType ServiceID,
 126:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_os_param param1, EE_os_param param2, EE_os_param param3,
 127:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   StatusType Error )
 128:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 129:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 130:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   if ( EE_ErrorHook_nested_flag == 0U )
 131:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   {
 132:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_os_fill_error_data(ServiceID, param1, param2, param3);
 133:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 1U;
 134:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_oo_call_ErrorHook(Error);
 135:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 0U;
 136:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   }
 137:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 138:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 139:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 140:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us(
 141:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   OSServiceIdType ServiceID, const EE_oo_ErrorHook_parameters * const
 142:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     error_parameters_ref, StatusType Error )
 143:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 144:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   if ( error_parameters_ref != NULL ) {
 145:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     register EE_FREG const flag = EE_hal_begin_nested_primitive();
 146:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_os_notify_error(ServiceID, error_parameters_ref->param1,
 147:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       error_parameters_ref->param2, error_parameters_ref->param3, Error);
 148:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);
 149:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   }
 150:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 151:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 152:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 153:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 154:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* The following code belong to ERIKA API section ee_api_text */
 155:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define API_START_SEC_CODE
 156:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #include "MemMap.inc"
 157:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 158:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 159:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** void EE_os_notify_error_from_us( OSServiceIdType ServiceID,
 160:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   const EE_oo_ErrorHook_parameters * const error_parameters_ref,
 161:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   StatusType Error );
 162:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 163:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 164:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define API_STOP_SEC_CODE
 165:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #include "MemMap.inc"
 166:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 167:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 168:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
 169:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 170:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 171:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_os_notify_error(k,j,x,y,z) EE_os_notify_error_impl(z)
 172:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 173:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_impl(StatusType Error)
 174:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 175:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 176:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 177:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 178:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 179:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_os_notify_error_from_us(x,y,z) EE_os_notify_error_from_us_impl(z)
 180:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 11


 181:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us_impl(
 182:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   StatusType Error )
 183:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 184:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 185:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 186:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 187:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 188:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /*******************************************************************************
 189:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  *                  Kernel Critical Section Utility Macros
 190:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  ******************************************************************************/
 191:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 192:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 193:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()  register EE_FREG flag
 194:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 195:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()          \
 196:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   do {                                          \
 197:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     flag = EE_hal_begin_nested_primitive();     \
 198:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets(); \
 199:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   } while ( 0 )
 200:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 201:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 202:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_OS_DECLARE_CRITICAL_SECTION();                 \
 203:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_OS_ENTER_CRITICAL_SECTION()
 204:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 205:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()             \
 206:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   do {                                            \
 207:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_as_tp_active_update_budgets_and_restart(); \
 208:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);            \
 209:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   } while ( 0 )
 210:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 211:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()          \
 212:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   do {                                            \
 213:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_hal_disableIRQ();                          \
 214:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets();   \
 215:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   } while ( 0 )
 216:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 217:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 218:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* TP in any case have to be handled in Service Implementation. Syscall
 219:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    mechanism can be implement in C language and, in that case, a function call
 220:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    cannot be done in syscall handler. */
 221:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()            ((void)0)
 222:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()              \
 223:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 224:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 225:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 226:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()               \
 227:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_as_tp_active_update_budgets_and_restart()
 228:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()			\
 229:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 230:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 231:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 232:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* return the first stacked task (the running task) without extracting it 
 233:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    we suppose that this function can be called ALSO at interrupt ENABLED!!!
 234:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    (see WaitEvent.c) */
 235:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_QUERYFIRST__
 236:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_queryfirst(void)
 237:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 12


 238:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     return EE_stkfirst;  
  62              		.loc 3 238 0
  63 0008 364B     		ldr	r3, .L13
  64 000a 1D68     		ldr	r5, [r3]
  65              	.LBE90:
  66              	.LBE89:
  67              	.LBB91:
  68              	.LBB92:
  69              		.file 4 "Generated_Source\\PSoC5\\ErikaOS_common_ee_primitives.inc"
   1:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * Copyright (C) 2002-2009  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * Functions used in HAL implementations, to be included by a specific
  43:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * ee_internal.h header.
  44:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * Derived from pkg/cpu/pic30/inc/ee_internal.h
  45:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * Author: 2009 Bernardo Dal Seno
  46:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  */
  47:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** 
  48:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** /*
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 13


  49:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * PSoC Port and API Generation
  50:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * Carlos Fernando Meier Martinez
  51:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * Hochschule Darmstadt, Germany. 2017.
  52:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  */
  53:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** 
  54:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** #ifndef PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  55:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** #define PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  56:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** 
  57:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** /*
  58:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * Nested Interrupts Handling
  59:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  */
  60:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  62:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  63:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** /* The following variables belong to ERIKA OS section: ee_kernel_bss */
  64:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** #define OS_START_SEC_VAR_NOINIT
  65:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** #include "MemMap.inc"
  66:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  67:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** 
  68:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** extern EE_UREG EE_IRQ_nesting_level;
  69:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  71:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  72:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** #define OS_STOP_SEC_VAR_NOINIT
  73:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** #include "MemMap.inc"
  74:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  75:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** 
  76:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** /* can be called with interrupt enabled */
  77:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** __INLINE__ EE_UREG  EE_hal_get_IRQ_nesting_level(void)
  78:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** {
  79:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****     return EE_IRQ_nesting_level;
  70              		.loc 4 79 0
  71 000c 364B     		ldr	r3, .L13+4
  72 000e 1B68     		ldr	r3, [r3]
  73              	.LBE92:
  74              	.LBE91:
  69:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   register TaskType current;
  70:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   /* Error Value */
  71:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   register StatusType ev;
  72:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   /* Primitive Lock Procedure */
  73:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION();
  74:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
  75:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   EE_ORTI_set_service_in(EE_SERVICETRACE_WAITEVENT);
  76:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
  77:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   EE_as_monitoring_the_stack();
  78:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
  79:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   current = EE_stk_queryfirst();
  80:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
  81:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #ifdef EE_SERVICE_PROTECTION__
  82:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   /* [OS093]: If interrupts are disabled/suspended by a Task/OsIsr and the
  83:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****       Task/OsIsr calls any OS service (excluding the interrupt services)
  84:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****       then the Operating System shall ignore the service AND shall return
  85:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****       E_OS_DISABLEDINT if the service returns a StatusType value. */
  86:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   /* [OS088]: If an OS-Application makes a service call from the wrong context
  87:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****       AND is currently not inside a Category 1 ISR the Operating System module
  88:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****       shall not perform the requested action (the service call shall have no
  89:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****       effect), and return E_OS_CALLEVEL (see [12], section 13.1) or the
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 14


  90:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****       "invalid value" of  the service. (BSW11009, BSW11013) */
  91:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   if ( EE_oo_check_disableint_error() ) {
  92:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     ev = E_OS_DISABLEDINT;
  93:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   } else
  94:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #endif /* EE_SERVICE_PROTECTION__ */
  95:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
  96:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #if (defined(__OO_EXTENDED_STATUS__)) || (defined(EE_SERVICE_PROTECTION__))
  97:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   /* Check for a call at interrupt level:
  98:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****    * Note: this must be the FIRST error check!!! */
  99:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   if ( (EE_hal_get_IRQ_nesting_level() != 0U) || (current == EE_NIL)
  75              		.loc 1 99 0
  76 0010 002B     		cmp	r3, #0
  77 0012 5DD1     		bne	.L8
  78              		.loc 1 99 0 is_stmt 0 discriminator 1
  79 0014 B5F1FF3F 		cmp	r5, #-1
  80 0018 5CD0     		beq	.L9
 100:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #if !defined (EE_SERVICE_PROTECTION__)
 101:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   ) /* If EE_SERVICE_PROTECTION__ is not defined the succeeding
 102:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 	 * check is always FALSE, hence it is not needed  */
 103:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #else
 104:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   || (EE_as_get_execution_context() > TASK_Context) )
 105:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #endif
 106:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   {
 107:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     ev = E_OS_CALLEVEL;
 108:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   } else
 109:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #endif /* __OO_EXTENDED_STATUS__ || EE_SERVICE_PROTECTION__ */
 110:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
 111:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #ifdef __OO_EXTENDED_STATUS__
 112:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #ifndef __OO_NO_RESOURCES__
 113:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   /* Check for busy resources */
 114:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   if ( EE_th_resource_last[current] != EE_UREG_MINUS1 )
 115:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   {
 116:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     ev = E_OS_RESOURCE;
 117:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   } else
 118:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #endif /* __OO_NO_RESOURCES__ */
 119:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   /* Check if the task is an extended TASK */
 120:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   if ( EE_th_is_extended[current] == EE_FALSE ) {
  81              		.loc 1 120 0 is_stmt 1
  82 001a 344B     		ldr	r3, .L13+8
  83 001c 53F82530 		ldr	r3, [r3, r5, lsl #2]
  84 0020 002B     		cmp	r3, #0
  85 0022 59D0     		beq	.L10
 121:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     ev = E_OS_ACCESS;
 122:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   } else
 123:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #ifdef EE_AS_USER_SPINLOCKS__
 124:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   /* [OS622]: The AUTOSAR Operating System WaitEvent API service shall check if
 125:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****       it has been called while the calling TASK has occupied a spinlock.
 126:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****       In extended status an error E_OS_SPINLOCK shall be returned and the TASK
 127:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****       shall not enter the wait state. (BSW4080021) */
 128:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   if ( EE_as_has_spinlocks_locked(current) ) {
 129:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     ev = E_OS_SPINLOCK;
 130:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   } else
 131:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #endif /* EE_AS_USER_SPINLOCKS__ */
 132:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #endif /* __OO_EXTENDED_STATUS__ */
 133:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
 134:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #if (defined(EE_AS_OSAPPLICATIONS__)) && (defined(__EE_MEMORY_PROTECTION__))
 135:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #if (defined(EE_SYSCALL_NR)) && (defined(EE_MAX_SYS_SERVICEID)) \
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 15


 136:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   && (EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID)
 137:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   /* If a TASK is inside CallTrustedFunction() and TASK
 138:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****      rescheduling takes place within the same OSApplication scheduling of
 139:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****      other TASKs which belong to the same OS-Application as the caller needs
 140:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****      to be restricted.
 141:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****      EG:To assure that I CANNOT let WAIT take place in a
 142:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****         Trusted Function Call!!! */
 143:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   if ( EE_as_Application_RAM[EE_as_active_app].
 144:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****         TrustedFunctionCallsCounter != 0U )
 145:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   {
 146:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     ev = E_OS_ACCESS;
 147:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   } else
 148:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #endif /* EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID */
 149:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #endif /* EE_AS_OSAPPLICATIONS__ && __EE_MEMORY_PROTECTION__ */
 150:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   /* Check if we have to wait */
 151:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   if ( (EE_th_event_active[current] & Mask) == 0U ) {
  86              		.loc 1 151 0
  87 0024 324B     		ldr	r3, .L13+12
  88 0026 53F82530 		ldr	r3, [r3, r5, lsl #2]
  89 002a 0342     		tst	r3, r0
  90 002c 56D1     		bne	.L11
 152:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     /* Set the waiting mask */
 153:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     EE_th_event_waitmask[current] = Mask;
  91              		.loc 1 153 0
  92 002e 314B     		ldr	r3, .L13+16
  93 0030 43F82500 		str	r0, [r3, r5, lsl #2]
  94              	.LBB93:
  95              	.LBB94:
 239:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 240:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_QUERYFIRST__ */
 241:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 242:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* This function notifies a tick to a hardware counter.
 243:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    That is, the counter is
 244:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    incremented by 1.  It must be called into an ISR2 or into a
 245:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    task notify that the event linked to the counter occurred.
 246:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 247:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    The function will also implement the notification of expired alarms
 248:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    (calling an alarm callback, setting an event, or activating a
 249:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    task).
 250:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 251:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    The function can be considered atomic, and NO RESCHEDULING will
 252:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    take place after the execution of this function. To implement the
 253:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    rescheduling at task level, you can use the Schedule() or the
 254:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    ForceSchedule() functions just after this notification.
 255:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 256:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    see also internal.h
 257:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** */
 258:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if (!defined(__OO_NO_ALARMS__)) || (defined(EE_AS_SCHEDULETABLES__))
 259:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 260:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** StatusType EE_oo_IncrementCounterHardware(CounterType CounterID);
 261:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** void       EE_oo_IncrementCounterImplementation(CounterType CounterID);
 262:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 263:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* kernel internal API */
 264:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define IncrementCounterHardware EE_oo_IncrementCounterHardware
 265:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 266:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Helper function (0 as increment means next tick)*/
 267:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** void EE_oo_counter_object_insert( CounterObjectType ObjectID, TickType
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 16


 268:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   increment );
 269:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 270:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 271:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 272:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void 
 273:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_oo_handle_abs_counter_object_insertion( CounterObjectType ObjectID,
 274:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     TickType absstart, TickType abscycle ) 
 275:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 276:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* These are used to evaluate alarm time handling wrap around */
 277:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   register TickType           alarm_time;
 278:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   register TickType           start_rel;
 279:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   register CounterType const  cnt = EE_oo_counter_object_ROM[ObjectID].c;
 280:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 281:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 282:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 283:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = abscycle;
 284:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 285:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* Handling wrap around for alarm time */
 286:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   start_rel = absstart - EE_counter_RAM[cnt].value;
 287:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 288:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /*  When will be here start value will be already checked against counter
 289:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       max allowed value */
 290:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   if ( start_rel == 0U ) {
 291:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     /* start_rel == 0U -> the alarm should start now or next time that counter
 292:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****        has this value. Has been chosen the second option */
 293:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue;
 294:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   } else if ( start_rel < EE_TYPETICK_HALF_VALUE ) {
 295:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     /* Normal behavior */
 296:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     alarm_time = start_rel - 1U;
 297:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   } else {
 298:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     /* start_rel is "negative" in this case (unsigned wrap around do the
 299:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****        work) */
 300:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue + start_rel;
 301:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   }
 302:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 303:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* Set alarm with a relative amount of time (alarm_time already is a "0 as
 304:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      next tick" value)*/
 305:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, alarm_time);
 306:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 307:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 308:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void 
 309:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_oo_handle_rel_counter_object_insertion( CounterObjectType ObjectID,
 310:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     TickType increment, TickType relcycle )
 311:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 312:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 313:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 314:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 315:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = relcycle;
 316:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 317:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* then, insert the task into the delta queue with an increment equal
 318:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      (increment - 1U) increment equal to 0 means next tick */
 319:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, (increment - 1U));
 320:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 321:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 322:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* cancellation */
 323:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_handle_counter_object_cancellation(
 324:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   CounterObjectType ObjectID )
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 17


 325:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 326:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   register CounterObjectType current, previous;
 327:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   register CounterType       ct      = EE_oo_counter_object_ROM[ObjectID].c;
 328:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 329:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* to compute the relative value in ticks, we have to follow the counter
 330:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      delay chain */
 331:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   current = EE_counter_RAM[ct].first;
 332:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 333:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   if ( current == ObjectID ) {
 334:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     /* the alarm is the first one in the delta queue */
 335:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_counter_RAM[ct].first = EE_oo_counter_object_RAM[ObjectID].next;
 336:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   } else {
 337:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     /* the alarm is not the first one in the delta queue */
 338:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     /* Find it */
 339:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     do {
 340:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       previous = current;
 341:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       current = EE_oo_counter_object_RAM[current].next;
 342:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     } while ( current != ObjectID );
 343:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     /* remove it from the queue */
 344:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[previous].next =
 345:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].next;
 346:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   }
 347:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* Adjust delta value */
 348:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   if ( EE_oo_counter_object_RAM[ObjectID].next != INVALID_COUNTER_OBJECT ) {
 349:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[EE_oo_counter_object_RAM[ObjectID].next].delta +=
 350:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].delta;
 351:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   }
 352:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 353:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_FALSE;
 354:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 355:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE */
 356:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE > 0 */
 357:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* !__OO_NO_ALARMS__ || EE_AS_SCHEDULETABLES__ */
 358:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 359:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /*************************************************************************
 360:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  HAL extensions
 361:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  *************************************************************************/
 362:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 363:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  /* these are the functions that have been inserted to support tha OO layer
 364:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     under the EE HAL.
 365:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     
 366:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     - all the functions for interrupt handling (13.3)
 367:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     - EE_hal_begin_nested_primitive
 368:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       EE_hal_end_nested_primitive 
 369:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       (for primitives that can be called both into a task and into an ISR2
 370:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     - EE_hal_terminate_task(EE_TID t)
 371:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     - EE_hal_terminate_savestk(EE_TID t)
 372:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       EE_oo_preemption_point() execute task preemption if is needed
 373:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     - EE_oo_shutdown() if not redefined it does for(;;);
 374:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     - All the alarm constants listed in 13.6.4
 375:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  */
 376:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 377:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 378:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /***************************************************************************
 379:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * Internal data structures and functions
 380:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  ***************************************************************************/
 381:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 18


 382:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /*
 383:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     Call Hooks utilities
 384:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  */
 385:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 386:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifdef __OO_HAS_PRETASKHOOK__
 387:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 388:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 389:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_as_set_execution_context( PreTaskHook_Context );
 390:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   PreTaskHook();
 391:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 392:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 393:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 394:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 395:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #else /* __OO_HAS_PRETASKHOOK__ */
 396:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 397:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 398:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 399:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 400:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 401:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* __OO_HAS_PRETASKHOOK__ */
 402:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 403:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if defined(__OO_HAS_POSTTASKHOOK__)
 404:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void)
 405:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 406:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_as_set_execution_context( PostTaskHook_Context );
 407:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   PostTaskHook();
 408:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 409:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #else /* __OO_HAS_POSTTASKHOOK__ */
 410:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void) {}
 411:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* __OO_HAS_POSTTASKHOOK__ */
 412:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 413:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 414:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* StartOS Flag defined inside ee_startos.c to check that the system has correctly started */
 415:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** extern EE_UREG volatile EE_oo_started;
 416:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 417:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 418:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Used to check if we are in disable interrupt error. It return
 419:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    'signed register type' because usually it is native integer type. */
 420:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ EE_TYPEBOOL  EE_oo_check_disableint_error(void)
 421:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 422:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   return ( EE_oo_IRQ_disable_count != 0U );
 423:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 424:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 425:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 426:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* A lookup table to speedup ready queue handling */
 427:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** extern const EE_INT8 EE_rq_lookup[256];
 428:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Lookup functions */
 429:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if defined(__OO_ECC2__)
 430:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 431:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 432:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* Lookup at bits 15-9 */
 433:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_INT8 x = EE_rq_lookup[(EE_rq_bitmask & 0xFF00U) >> 8];
 434:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   if (x == (EE_INT8)-1) {
 435:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     x = EE_rq_lookup[EE_rq_bitmask];
 436:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   } else {
 437:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     x += (EE_INT8)8;
 438:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   }
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 19


 439:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   return x;
 440:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 441:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #else /* __OO_ECC2__ */
 442:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 443:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 444:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   return EE_rq_lookup[EE_rq_bitmask];
 445:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 446:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* __OO_ECC2__ */
 447:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* __OO_BCC2__ || __OO_ECC2__ */
 448:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 449:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Internal Queue management functions */
 450:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 451:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* return the first ready task without extracting it */
 452:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_QUERYFIRST__
 453:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if (defined(__OO_BCC1__)) || (defined(__OO_ECC1__))
 454:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_rq_queryfirst(void)
 455:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** { return EE_rq_first; }
 456:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif
 457:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 458:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 459:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** EE_TID EE_rq_queryfirst(void);
 460:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif
 461:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif
 462:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 463:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* __INLINE__ EE_TID  EE_stk_queryfirst(void) in intfunc.h */
 464:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 465:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Extract the RUNNING task from the stack, and return the new head */
 466:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_GETFIRST__
 467:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_getfirst(void)
 468:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 469:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   return (EE_stkfirst = EE_th_next[EE_stkfirst]);
 470:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 471:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_GETFIRST__ */
 472:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 473:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* insert a task into the stack data structures */
 474:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_INSERTFIRST__
 475:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_stk_insertfirst(EE_TID t)
 476:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 477:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_th_next[t] = EE_stkfirst;
 478:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_stkfirst = t;
 479:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 480:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif
 481:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 482:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* insert a task into the ready queue */
 483:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_INSERT__
 484:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** void EE_rq_insert(EE_TID t);
 485:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif
 486:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 487:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* put the first ready task into the stack */
 488:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ2STK_EXCHANGE__
 489:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** EE_TID EE_rq2stk_exchange(void);
 490:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif
 491:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 492:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifndef __OO_NO_RESOURCES__
 493:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /*
 494:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     Method to release all resources locked by a Thread,
 495:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     used to fulfill AS requirement OS070
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 20


 496:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  */
 497:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if ((!defined(__OO_EXTENDED_STATUS__)) && \
 498:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     (!defined(__PRIVATE_RELEASEALLRESOURCE__))) && \
 499:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     (!defined(__OO_ISR2_RESOURCES__))
 500:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_release_all_resources(EE_TID tid)
 501:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 502:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* release the internal resource. a EE_TYPEPRIO is a bit mask with only one
 503:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      bit set to one.
 504:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      If i subtract one to this I obtain a bit mask with all
 505:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      ones before the starting one and all zeros after 
 506:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      (exactly what I want to release resources!)
 507:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   */
 508:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_sys_ceiling &= (EE_th_dispatch_prio[tid] - 1U);
 509:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 510:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #else
 511:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** EE_UREG EE_oo_release_all_resources(EE_TID tid);
 512:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* !__OO_EXTENDED_STATUS__ && !__OO_ISR2_RESOURCES__ */
 513:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #else /* __OO_NO_RESOURCES__ */
 514:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_oo_release_all_resources(tid)    ((void)0)
 515:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* __OO_NO_RESOURCES__ */
 516:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 517:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifndef __PRIVATE_THREANTERMINATED__
 518:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* this the function that will be called if a Task doesn't end calling
 519:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    TerminateTask */
 520:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 521:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** extern void EE_thread_not_terminated( void );
 522:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* __PRIVATE_THREANTERMINATED__ */
 523:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 524:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* This call terminates a thread instance. It must be called as the
 525:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    LAST function call BEFORE the `}' that ends a thread. If the
 526:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    primitive is not inserted at the end of */
 527:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifndef __PRIVATE_THREAD_END_INSTANCE__
 528:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** void EE_thread_end_instance(void);
 529:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif
 530:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 531:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if (defined(__OO_ISR2_RESOURCES__)) || (defined(EE_AS_USER_SPINLOCKS__))
 532:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Index used to give ISR2 Temporary TID value and to access at
 533:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    EE_isr2_nesting_level array */
 534:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** extern EE_UREG EE_isr2_index;
 535:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 536:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Assign a fake TID to an ISR2 to eventually handle resources clean-up */
 537:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** EE_TID  EE_oo_assign_TID_to_ISR2(void);
 538:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 539:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Get the last assigned fake ISR2 TID */
 540:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_oo_get_ISR2_TID(void) {
 541:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   return (EE_isr2_index != EE_UREG_MINUS1)?
 542:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     (EE_MAX_TASK + (EE_TID)EE_isr2_index): EE_NIL;
 543:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 544:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
 545:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 546:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 547:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /*
 548:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     Reset Active Events  THREAD utility method.
 549:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 550:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     When an extended task is transferred from suspended state
 551:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     into ready state all its events have to be cleared cleared
 552:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** */
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 21


 553:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_reset_th_event_active(TaskType tnotactive)
 554:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 555:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_th_event_active[tnotactive] = 0U;
 556:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 557:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 558:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* 
 559:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 560:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** */
 561:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifdef __MULTI__
 562:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 563:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 564:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     register TaskType tmp;
 565:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     /* swap from ready queue to stack queue */
 566:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     tmp = EE_rq2stk_exchange();
 567:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     if ( EE_th_waswaiting[tmp] ) {
 568:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       /* if the task was waiting switch the context to restart it */
 569:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       EE_th_waswaiting[tmp] = EE_FALSE;
 570:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       /* Call the PreTaskHook, here no stub will do that for you */
 571:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       EE_oo_call_PreTaskHook();
 572:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       EE_hal_stkchange(tmp);
 573:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     } else {
 574:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       /* the next task have to be started */
 575:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       EE_hal_ready2stacked(tmp);
 576:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     }
 577:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 578:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #else
 579:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 580:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 581:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_hal_ready2stacked(EE_rq2stk_exchange());
 582:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 583:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* __MULTI__ */
 584:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #else
 585:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_oo_reset_th_event_active(TaskID)    ((void) 0)
 586:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 587:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* 
 588:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 589:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** */
 590:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 591:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 592:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_hal_ready2stacked(EE_rq2stk_exchange());
 593:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 594:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* defined(__OO_ECC1__) || defined(__OO_ECC2__) */
 595:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 596:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 597:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 598:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /*
 599:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     Set THREAD ready utility method.
 600:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     If the task is BCC2/ECC2 it can be that it is ready or 
 601:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     running. in that case we have to check and queue it anyway
 602:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   */
 603:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_set_th_status_ready(TaskType TaskID)
 604:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 605:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     if (EE_th_status[TaskID] == SUSPENDED) {
 606:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****         EE_th_status[TaskID] = READY;
 607:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****         EE_oo_reset_th_event_active(TaskID);
 608:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     }
 609:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 22


 610:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #else
 611:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /*
 612:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     Set THREAD ready utility method
 613:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     If the task is BCC1/ECC1 it can be here only because
 614:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     it had rnact=1 before the call, and so it is in suspended state
 615:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   */
 616:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_set_th_status_ready(TaskType tready)
 617:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 618:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_th_status[tready] = READY;
 619:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_oo_reset_th_event_active(tready);
 620:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 621:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* defined(__OO_BCC2__) || defined(__OO_ECC2__) */
 622:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 623:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_task_in_ready_queue( TaskType tid )
 624:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 625:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* Decrement the residual number activation */
 626:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   --EE_th_rnact[tid];
 627:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* Set the status READY handling multiple activations */
 628:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_oo_set_th_status_ready(tid);
 629:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* insert the task in the ready queue */
 630:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_rq_insert(tid);
 631:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 632:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 633:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Execute a preemption */
 634:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifndef __PRIVATE_PREEMPTION_POINTS__
 635:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /*
 636:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   Moved preemption check implementation into an outside method because the
 637:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   behaviour is common to EE_ActivateTask, EE_oo_ForceSchedule,
 638:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_oo_IncrementCounter, EE_oo_ReleaseResource, EE_oo_PostSem
 639:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** */
 640:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_preemption_point(void)
 641:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 642:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   register EE_TID current, rq;
 643:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 644:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* check if there is a preemption */
 645:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   current = EE_stk_queryfirst();
 646:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   rq      = EE_rq_queryfirst();
 647:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 648:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if (defined(EE_AS_OSAPPLICATIONS__)) && (defined(__EE_MEMORY_PROTECTION__))
 649:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if (defined(EE_SYSCALL_NR)) && (defined(EE_MAX_SYS_SERVICEID)) \
 650:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   && (EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID)
 651:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* Reaction to timing protection can be defined to terminate the
 652:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      OSApplication. If a task is inside CallTrustedFunction() and task
 653:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      rescheduling takes place within the same OSApplication,
 654:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      the newly running higher priority task may cause timing protection and
 655:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      terminate the OSApplication, thus indirectly aborting the trusted
 656:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      function. To avoid this, the scheduling of other Tasks which belong to
 657:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      the same OS-Application as the caller needs to be restricted, as well as
 658:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      the availability of interrupts of the same OS-Application. */
 659:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* [SWS_Os_00563]: The OperatingSystem shall not schedule any other Tasks
 660:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       which belong to the same OS-Application as the non-trusted caller of the
 661:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       service. Also interrupts of Category 2 which belong to the same
 662:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       OS-Application shall be disabled during the execution of the service. */
 663:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   if (  (EE_as_active_app != EE_th_app[rq + 1]) ||
 664:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****         (EE_as_Application_RAM[EE_as_active_app].
 665:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****           TrustedFunctionCallsCounter == 0U) ||
 666:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****         (EE_as_Application_ROM[EE_as_active_app].Mode == EE_MEMPROT_TRUST_MODE)
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 23


 667:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      )
 668:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID */
 669:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* EE_AS_OSAPPLICATIONS__ && __EE_MEMORY_PROTECTION__ */
 670:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   {
 671:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     if ( rq != EE_NIL ) {
 672:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       /* We check if the system ceiling is greater or not the first task
 673:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****          in the ready queue */
 674:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       if ( EE_sys_ceiling < EE_th_ready_prio[rq] ) {
 675:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 676:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****         if ( current != EE_NIL ) {
 677:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****           EE_oo_call_PostTaskHook();
 678:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****           /* We have to put the task in the READY status */
 679:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****           EE_th_status[current] = READY;
 680:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****           /* !!! BUT NOT IN THE READY QUEUE !!!
 681:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****              The task remains into the Stacked Queue! */
 682:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****         }
 683:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 684:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****         /* Get the new internal resource */
 685:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****         EE_sys_ceiling |= EE_th_dispatch_prio[rq];
 686:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****         /* Put the task in running state */
 687:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****         EE_th_status[rq] = RUNNING;
 688:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 689:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****         EE_ORTI_set_th_eq_dispatch_prio(rq);
 690:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 691:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****         /* "Press TP start for the first time" for this new activation/release of
 692:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****             the TASK */
 693:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****         EE_as_tp_active_start_on_TASK_stacking(rq);
 694:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 695:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****         /* Execute context SWITCH, this method return when we have a switch
 696:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****            back on the previous TASK contest. */
 697:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****         EE_oo_run_next_task();
 698:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       }
 699:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     }
 700:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   }
 701:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 702:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 703:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if ( (defined(__OO_ECC1__)) || (defined(__OO_ECC2__)) ) && (defined(__MULTI__))
 704:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 705:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Prepare current Task to Block if Extended Task is configured */
 706:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_prepare_to_block(void) {
 707:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* Get the current TASK */
 708:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   register EE_TID current = EE_stk_queryfirst();
 709:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 710:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* The task must go into the WAITING state */
 711:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_th_status[current] = WAITING;
  96              		.loc 3 711 0
  97 0034 0122     		movs	r2, #1
  98 0036 304B     		ldr	r3, .L13+20
  99 0038 43F82520 		str	r2, [r3, r5, lsl #2]
 712:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 713:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* [SWS_Os_00473]: The Operating System module shall reset a task's
 714:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       OsTaskExecutionBudget on a transition to the SUSPENDED or WAITING states.
 715:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       (SRS_Os_11008) */
 716:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_as_tp_stop_budget(EE_as_tp_active.active_tp_RAM_ref, EE_EXECUTION_BUDGET);
 717:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 718:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* Call the Post Task Hook before change stk data structure */
 719:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_oo_call_PostTaskHook();
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 24


 720:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 721:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* Reset the thread priority bit in the system_ceiling */
 722:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_sys_ceiling &= ~EE_th_dispatch_prio[current];
 100              		.loc 3 722 0
 101 003c 2F4B     		ldr	r3, .L13+24
 102 003e 53F82500 		ldr	r0, [r3, r5, lsl #2]
 103              	.LVL3:
 104 0042 2F49     		ldr	r1, .L13+28
 105 0044 0B68     		ldr	r3, [r1]
 106 0046 23EA0003 		bic	r3, r3, r0
 107 004a 0B60     		str	r3, [r1]
 723:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* The ready priority is not touched, it is not the same as Schedule! */
 724:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 725:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* Reset ORTI priority */
 726:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_ORTI_set_th_priority(current, 0U);
 727:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 728:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* Since the task blocks, it has to be woken up by another EE_hal_stkchange */
 729:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_th_waswaiting[current] = EE_TRUE;
 108              		.loc 3 729 0
 109 004c 2D4B     		ldr	r3, .L13+32
 110 004e 43F82520 		str	r2, [r3, r5, lsl #2]
 111              	.LBB95:
 112              	.LBB96:
 469:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 113              		.loc 3 469 0
 114 0052 2D4B     		ldr	r3, .L13+36
 115 0054 53F82520 		ldr	r2, [r3, r5, lsl #2]
 116 0058 224B     		ldr	r3, .L13
 117 005a 1A60     		str	r2, [r3]
 118              	.LBE96:
 119              	.LBE95:
 120              	.LBE94:
 121              	.LBE93:
 122              	.LBB97:
 123              	.LBB98:
 730:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 731:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* Extract the TASK from the stacked queue */
 732:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   (void)EE_stk_getfirst();
 733:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 734:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 735:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Reschedule on task blocking if Extended Task is configured */
 736:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_reschedule_on_block(void)
 737:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 738:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   register EE_TID nexttask;
 739:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 740:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   nexttask = EE_rq_queryfirst();
 124              		.loc 3 740 0
 125 005c FFF7FEFF 		bl	EE_rq_queryfirst
 126              	.LVL4:
 741:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   if ( (nexttask == EE_NIL) || (EE_sys_ceiling >= EE_th_ready_prio[nexttask]) ) {
 127              		.loc 3 741 0
 128 0060 B0F1FF3F 		cmp	r0, #-1
 129 0064 06D0     		beq	.L3
 130 0066 294B     		ldr	r3, .L13+40
 131 0068 53F82020 		ldr	r2, [r3, r0, lsl #2]
 132 006c 244B     		ldr	r3, .L13+28
 133 006e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 25


 134 0070 9A42     		cmp	r2, r3
 135 0072 0DD8     		bhi	.L4
 136              	.L3:
 137              	.LBB99:
 138              	.LBB100:
 238:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 139              		.loc 3 238 0
 140 0074 1B4B     		ldr	r3, .L13
 141 0076 1868     		ldr	r0, [r3]
 142              	.LVL5:
 143              	.LBE100:
 144              	.LBE99:
 742:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     /* we have to schedule an interrupted thread that is on the top
 743:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      * of its stack; the state is already STACKED! */
 744:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     nexttask = EE_stk_queryfirst();
 745:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     if ( nexttask != EE_NIL ) {
 145              		.loc 3 745 0
 146 0078 B0F1FF3F 		cmp	r0, #-1
 147 007c 03D0     		beq	.L5
 746:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       EE_th_status[nexttask] = RUNNING;
 148              		.loc 3 746 0
 149 007e 0022     		movs	r2, #0
 150 0080 1D4B     		ldr	r3, .L13+20
 151 0082 43F82020 		str	r2, [r3, r0, lsl #2]
 152              	.L5:
 153              	.LVL6:
 154              	.LBB101:
 155              	.LBB102:
 156              		.file 5 "Generated_Source\\PSoC5\\ErikaOS_cortex_mx_ee_context.inc"
   1:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * exception statement from your version.
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 26


  29:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 	@file ee_internal.h
  43:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 	@brief Derived from cpu/common/inc/ee_internal.h
  44:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** */  
  48:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** #ifndef __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  56:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** #define __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  57:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** /*
  59:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * Instructions
  60:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  *
  61:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * The monostack part is complete (obviously, the functions to disable/enable
  62:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  *  interrupts are not included here).  For the multistack part you have to
  63:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  *  provide two additional things:
  64:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  *  1. An assembly implementation of EE_std_change_context_multi(); see below.
  65:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  *  2. A #define directive for EE_hal_active_tos, which is just an alias for the
  66:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  *  actual architecture-dependent variable.  This variable contains the index of
  67:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  *  the current stack.
  68:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  */
  69:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** /* After a task terminates, the scheduler puts the id of the new task to launch
  71:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * or switch to in this variable.  If the is stacked, its id is marked so. */
  72:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** extern EE_TID EE_std_endcycle_next_tid;
  73:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** /* The multistack version must be implemented in ASM; no standard
  75:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * implementation, sorry.  This is the only function that performs context
  76:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * switching.  The multistack version doesn't jump to the task body if its TID
  77:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * has been maked as stacked.  This is used to switch to a task that has been
  78:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * suspend by a previous call to EE_std_change_contex(). */
  79:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** void EE_cortex_mx_change_context(EE_TID tid);
  80:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** /* Pseudo code for EE_std_change_context_multi():
  81:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****      begin:
  82:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****       tos_index = EE_std_thread_tos[tid+1];
  83:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****       if is_not_the_current_stack(tos_index) {
  84:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****           save_caller_saved_registers();
  85:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****           switch_stacks(tos_index);
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 27


  86:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****           restore_caller_saved_registers();
  87:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****       }
  88:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****       if (is_not_marked_stacked(tid)) {
  89:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****           tid = EE_std_run_task_code(tid);
  90:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****           goto begin;
  91:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****       }
  92:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
  93:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****       Please notice that the "goto begin" is actually a recursive call to
  94:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****       EE_std_change_context_multi(), but in this way there is no stack growing.
  95:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****       
  96:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****       Please notice also that 'tid' must NOT be saved onto the stack before
  97:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****       switching stacks, otherwise when switching from another stack back to the
  98:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****       current one, you would overwrite its value.
  99:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 100:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****       For processors where the return address is saved in a register, that
 101:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****       register must be saved in the stack too.
 102:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****       switch_stacks() should also update EE_hal_active_tos.
 104:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** */
 105:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 106:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** /* Call a the body of a task */
 107:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** #if defined(__OO_BCC1__) || defined(__OO_BCC2__) || \
 108:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  defined(__OO_ECC1__) || defined(__OO_ECC2__)
 109:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  EE_oo_thread_stub()
 110:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** #else
 111:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  (((void (*)(void))EE_hal_thread_body[tid])())
 112:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** #endif
 113:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 115:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** /* Launch a new task, possibly switching to a different stack, clean up the task
 116:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * after it ends, and call the scheduler (and switch to other tasks/stacks)
 117:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * until there are no more tasks to switch to.  In the multistack version, also
 118:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * change the current stack before returning if the scheduler asks for it. */
 119:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** __DECLARE_INLINE__ void EE_hal_ready2stacked(EE_TID tid);
 120:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 121:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** /* Launch a new task on the current stack, clean up the task after it ends, and
 123:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * call the scheduler.  Return the next task to launch, which is "marked as
 124:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * stacked" if there is no new task to launch. */
 125:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** EE_TID EE_std_run_task_code(EE_TID tid);
 126:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** /*
 129:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * Inline implementations
 130:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  */
 131:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 133:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** #ifdef __MONO__
 134:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** /* With monostack, we need only the information that the task is stacked.  We
 136:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * don't need to know which task it is, as there is no new stack to switch
 137:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * to. */
 138:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((EE_TID)-1)
 139:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 140:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** #define EE_std_need_context_change(tid) ((tid) >= 0)
 141:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 142:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** #endif /* __MONO__ */
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 28


 143:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 144:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 145:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** #ifdef __MULTI__
 146:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** /* TID_IS_STACKED_MARK must set the most significative bit */
 148:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((tid) | (EE_TID)TID_IS_STACKED_MARK)
 149:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 150:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** extern int EE_std_need_context_change(EE_TID tid);
 151:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_stkchange(EE_TID tid)
 153:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** {
 154:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(EE_std_mark_tid_stacked(tid));
 157              		.loc 5 154 0
 158 0086 40F00040 		orr	r0, r0, #-2147483648
 159              	.LVL7:
 160 008a FFF7FEFF 		bl	EE_cortex_mx_change_context
 161              	.LVL8:
 162 008e 1AE0     		b	.L6
 163              	.LVL9:
 164              	.L4:
 165              	.LBE102:
 166              	.LBE101:
 747:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       EE_oo_call_PreTaskHook();
 748:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       /* Enable the TASK Timing Protection Set */
 749:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       EE_as_tp_active_set_from_TASK(nexttask);
 750:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     } else {
 751:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       /* We are switching back to the Idle loop */
 752:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       EE_as_set_execution_context( Idle_Context );
 753:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       EE_as_tp_active_start_idle();
 754:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     }
 755:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 756:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     /* CONTEXT SWITCH to a previous stacked Task */
 757:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_hal_stkchange(nexttask);
 758:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   } else { 
 759:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     /* We have to schedule a ready thread that is not yet on the stack.
 760:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****        This means that the TASK set in excution for the first time or that it
 761:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****        was waiting. */
 762:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_th_status[nexttask] = RUNNING;
 167              		.loc 3 762 0
 168 0090 0021     		movs	r1, #0
 169 0092 194A     		ldr	r2, .L13+20
 170 0094 42F82010 		str	r1, [r2, r0, lsl #2]
 763:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_sys_ceiling |= EE_th_dispatch_prio[nexttask];
 171              		.loc 3 763 0
 172 0098 184A     		ldr	r2, .L13+24
 173 009a 52F82020 		ldr	r2, [r2, r0, lsl #2]
 174 009e 1343     		orrs	r3, r3, r2
 175 00a0 174A     		ldr	r2, .L13+28
 176 00a2 1360     		str	r3, [r2]
 177              	.LBB103:
 178              	.LBB104:
 566:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     if ( EE_th_waswaiting[tmp] ) {
 179              		.loc 3 566 0
 180 00a4 FFF7FEFF 		bl	EE_rq2stk_exchange
 181              	.LVL10:
 567:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       /* if the task was waiting switch the context to restart it */
 182              		.loc 3 567 0
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 29


 183 00a8 164B     		ldr	r3, .L13+32
 184 00aa 53F82030 		ldr	r3, [r3, r0, lsl #2]
 185 00ae 43B1     		cbz	r3, .L7
 569:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       /* Call the PreTaskHook, here no stub will do that for you */
 186              		.loc 3 569 0
 187 00b0 0022     		movs	r2, #0
 188 00b2 144B     		ldr	r3, .L13+32
 189 00b4 43F82020 		str	r2, [r3, r0, lsl #2]
 190              	.LVL11:
 191              	.LBB105:
 192              	.LBB106:
 193              		.loc 5 154 0
 194 00b8 40F00040 		orr	r0, r0, #-2147483648
 195              	.LVL12:
 196 00bc FFF7FEFF 		bl	EE_cortex_mx_change_context
 197              	.LVL13:
 198 00c0 01E0     		b	.L6
 199              	.LVL14:
 200              	.L7:
 201              	.LBE106:
 202              	.LBE105:
 203              	.LBB107:
 204              	.LBB108:
 155:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** }
 156:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 157:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** #endif /* __MULTI__ */
 158:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 159:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 160:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** /* The functions below should work for both the monostack and multistack
 161:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * versions of the kernel, thanks to the macros defined above.  In the mono
 162:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * version, all the stack-related stuff is ignored. */
 163:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 164:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_ready2stacked(EE_TID tid)
 166:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** {
 167:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(tid);
 205              		.loc 5 167 0
 206 00c2 FFF7FEFF 		bl	EE_cortex_mx_change_context
 207              	.LVL15:
 208              	.L6:
 209              	.LBE108:
 210              	.LBE107:
 211              	.LBE104:
 212              	.LBE103:
 213              	.LBE98:
 214              	.LBE97:
 154:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
 155:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     /* Prepare current TASK to block */
 156:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     EE_oo_prepare_to_block();
 157:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
 158:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     /* The TASK is not inserted in any queue! it will be woken
 159:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****        up by a SetEvent using a EE_hal_stkchange... */
 160:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
 161:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     /* Reschedule next TASK:
 162:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****      * check if there is to schedule a ready thread or pop a preempted
 163:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****      * thread */
 164:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     EE_oo_reschedule_on_block();
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 30


 165:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
 166:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     /* Reset the waiting mask */
 167:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     EE_th_event_waitmask[current] = 0U;
 215              		.loc 1 167 0
 216 00c6 0020     		movs	r0, #0
 217 00c8 0A4B     		ldr	r3, .L13+16
 218 00ca 43F82500 		str	r0, [r3, r5, lsl #2]
 219              	.LVL16:
 220 00ce 06E0     		b	.L2
 221              	.LVL17:
 222              	.L8:
 107:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   } else
 223              		.loc 1 107 0
 224 00d0 0220     		movs	r0, #2
 225              	.LVL18:
 226 00d2 04E0     		b	.L2
 227              	.LVL19:
 228              	.L9:
 229 00d4 0220     		movs	r0, #2
 230              	.LVL20:
 231 00d6 02E0     		b	.L2
 232              	.LVL21:
 233              	.L10:
 121:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   } else
 234              		.loc 1 121 0
 235 00d8 0120     		movs	r0, #1
 236              	.LVL22:
 237 00da 00E0     		b	.L2
 238              	.LVL23:
 239              	.L11:
 168:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
 169:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     ev = E_OK;
 170:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   } else {
 171:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     ev = E_OK;
 240              		.loc 1 171 0
 241 00dc 0020     		movs	r0, #0
 242              	.LVL24:
 243              	.L2:
 244              	.LBB109:
 245              	.LBB110:
 246              	.LBB111:
 232:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 247              		.loc 2 232 0
 248              		.syntax unified
 249              	@ 232 "Generated_Source\PSoC5\ErikaOS_cortex_mx_ee_cpu.inc" 1
 250 00de 84F31088 		msr primask, r4
 251              	@ 0 "" 2
 252              	.LVL25:
 253              		.thumb
 254              		.syntax unified
 255              	.LBE111:
 256              	.LBE110:
 257              	.LBE109:
 172:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   }
 173:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
 174:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   if ( ev != E_OK ) {
 175:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     EE_ORTI_set_lasterror(ev);
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 31


 176:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     EE_oo_notify_error_WaitEvent(Mask, ev);
 177:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   }
 178:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
 179:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   EE_ORTI_set_service_out(EE_SERVICETRACE_WAITEVENT);
 180:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   EE_OS_EXIT_CRITICAL_SECTION();
 181:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
 182:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   return ev;
 183:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** }
 258              		.loc 1 183 0
 259 00e2 38BD     		pop	{r3, r4, r5, pc}
 260              	.L14:
 261              		.align	2
 262              	.L13:
 263 00e4 00000000 		.word	EE_stkfirst
 264 00e8 00000000 		.word	EE_IRQ_nesting_level
 265 00ec 00000000 		.word	EE_th_is_extended
 266 00f0 00000000 		.word	EE_th_event_active
 267 00f4 00000000 		.word	EE_th_event_waitmask
 268 00f8 00000000 		.word	EE_th_status
 269 00fc 00000000 		.word	EE_th_dispatch_prio
 270 0100 00000000 		.word	EE_sys_ceiling
 271 0104 00000000 		.word	EE_th_waswaiting
 272 0108 00000000 		.word	EE_th_next
 273 010c 00000000 		.word	EE_th_ready_prio
 274              		.cfi_endproc
 275              	.LFE59:
 276              		.size	EE_oo_WaitEvent, .-EE_oo_WaitEvent
 277              		.text
 278              	.Letext0:
 279              		.file 6 "Generated_Source\\PSoC5\\ErikaOS_common_ee_types.inc"
 280              		.file 7 "Generated_Source\\PSoC5\\ErikaOS_ee_oo_common.inc"
 281              		.file 8 "Generated_Source\\PSoC5\\ErikaOS_ee_as_internal.inc"
 282              		.file 9 "Generated_Source\\PSoC5\\ErikaOS_cortex_mx_ee_internal.inc"
 283              		.file 10 "Generated_Source\\PSoC5\\ErikaOS_ee_oo_intfunc.inc"
 284              		.section	.debug_info,"",%progbits
 285              	.Ldebug_info0:
 286 0000 B5060000 		.4byte	0x6b5
 287 0004 0400     		.2byte	0x4
 288 0006 00000000 		.4byte	.Ldebug_abbrev0
 289 000a 04       		.byte	0x4
 290 000b 01       		.uleb128 0x1
 291 000c 95050000 		.4byte	.LASF83
 292 0010 0C       		.byte	0xc
 293 0011 F4000000 		.4byte	.LASF84
 294 0015 76000000 		.4byte	.LASF85
 295 0019 00000000 		.4byte	.Ldebug_ranges0+0
 296 001d 00000000 		.4byte	0
 297 0021 00000000 		.4byte	.Ldebug_line0
 298 0025 02       		.uleb128 0x2
 299 0026 01       		.byte	0x1
 300 0027 06       		.byte	0x6
 301 0028 23030000 		.4byte	.LASF0
 302 002c 02       		.uleb128 0x2
 303 002d 01       		.byte	0x1
 304 002e 08       		.byte	0x8
 305 002f D0020000 		.4byte	.LASF1
 306 0033 02       		.uleb128 0x2
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 32


 307 0034 02       		.byte	0x2
 308 0035 05       		.byte	0x5
 309 0036 DF000000 		.4byte	.LASF2
 310 003a 02       		.uleb128 0x2
 311 003b 02       		.byte	0x2
 312 003c 07       		.byte	0x7
 313 003d CC030000 		.4byte	.LASF3
 314 0041 02       		.uleb128 0x2
 315 0042 04       		.byte	0x4
 316 0043 05       		.byte	0x5
 317 0044 0F020000 		.4byte	.LASF4
 318 0048 02       		.uleb128 0x2
 319 0049 04       		.byte	0x4
 320 004a 07       		.byte	0x7
 321 004b 85040000 		.4byte	.LASF5
 322 004f 02       		.uleb128 0x2
 323 0050 08       		.byte	0x8
 324 0051 05       		.byte	0x5
 325 0052 E9010000 		.4byte	.LASF6
 326 0056 02       		.uleb128 0x2
 327 0057 08       		.byte	0x8
 328 0058 07       		.byte	0x7
 329 0059 34030000 		.4byte	.LASF7
 330 005d 03       		.uleb128 0x3
 331 005e 04       		.byte	0x4
 332 005f 05       		.byte	0x5
 333 0060 696E7400 		.ascii	"int\000"
 334 0064 02       		.uleb128 0x2
 335 0065 04       		.byte	0x4
 336 0066 07       		.byte	0x7
 337 0067 78030000 		.4byte	.LASF8
 338 006b 02       		.uleb128 0x2
 339 006c 08       		.byte	0x8
 340 006d 04       		.byte	0x4
 341 006e 9F020000 		.4byte	.LASF9
 342 0072 04       		.uleb128 0x4
 343 0073 28000000 		.4byte	.LASF10
 344 0077 06       		.byte	0x6
 345 0078 3E       		.byte	0x3e
 346 0079 2C000000 		.4byte	0x2c
 347 007d 04       		.uleb128 0x4
 348 007e F7010000 		.4byte	.LASF11
 349 0082 06       		.byte	0x6
 350 0083 3F       		.byte	0x3f
 351 0084 25000000 		.4byte	0x25
 352 0088 04       		.uleb128 0x4
 353 0089 04040000 		.4byte	.LASF12
 354 008d 06       		.byte	0x6
 355 008e 52       		.byte	0x52
 356 008f 3A000000 		.4byte	0x3a
 357 0093 04       		.uleb128 0x4
 358 0094 9E030000 		.4byte	.LASF13
 359 0098 06       		.byte	0x6
 360 0099 53       		.byte	0x53
 361 009a 5D000000 		.4byte	0x5d
 362 009e 04       		.uleb128 0x4
 363 009f 27010000 		.4byte	.LASF14
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 33


 364 00a3 06       		.byte	0x6
 365 00a4 54       		.byte	0x54
 366 00a5 64000000 		.4byte	0x64
 367 00a9 04       		.uleb128 0x4
 368 00aa 3F000000 		.4byte	.LASF15
 369 00ae 02       		.byte	0x2
 370 00af 4D       		.byte	0x4d
 371 00b0 9E000000 		.4byte	0x9e
 372 00b4 04       		.uleb128 0x4
 373 00b5 1F010000 		.4byte	.LASF16
 374 00b9 02       		.byte	0x2
 375 00ba 4F       		.byte	0x4f
 376 00bb 9E000000 		.4byte	0x9e
 377 00bf 04       		.uleb128 0x4
 378 00c0 AA040000 		.4byte	.LASF17
 379 00c4 02       		.byte	0x2
 380 00c5 54       		.byte	0x54
 381 00c6 A9000000 		.4byte	0xa9
 382 00ca 04       		.uleb128 0x4
 383 00cb 4F010000 		.4byte	.LASF18
 384 00cf 02       		.byte	0x2
 385 00d0 78       		.byte	0x78
 386 00d1 93000000 		.4byte	0x93
 387 00d5 05       		.uleb128 0x5
 388 00d6 FF010000 		.4byte	.LASF19
 389 00da 07       		.byte	0x7
 390 00db 0801     		.2byte	0x108
 391 00dd 88000000 		.4byte	0x88
 392 00e1 05       		.uleb128 0x5
 393 00e2 C7020000 		.4byte	.LASF20
 394 00e6 07       		.byte	0x7
 395 00e7 EE01     		.2byte	0x1ee
 396 00e9 CA000000 		.4byte	0xca
 397 00ed 05       		.uleb128 0x5
 398 00ee 68000000 		.4byte	.LASF21
 399 00f2 07       		.byte	0x7
 400 00f3 2302     		.2byte	0x223
 401 00f5 A9000000 		.4byte	0xa9
 402 00f9 05       		.uleb128 0x5
 403 00fa E9000000 		.4byte	.LASF22
 404 00fe 07       		.byte	0x7
 405 00ff 1803     		.2byte	0x318
 406 0101 2C000000 		.4byte	0x2c
 407 0105 06       		.uleb128 0x6
 408 0106 01       		.byte	0x1
 409 0107 2C000000 		.4byte	0x2c
 410 010b 07       		.byte	0x7
 411 010c 5004     		.2byte	0x450
 412 010e 55010000 		.4byte	0x155
 413 0112 07       		.uleb128 0x7
 414 0113 19000000 		.4byte	.LASF23
 415 0117 00       		.byte	0
 416 0118 07       		.uleb128 0x7
 417 0119 BF030000 		.4byte	.LASF24
 418 011d 01       		.byte	0x1
 419 011e 07       		.uleb128 0x7
 420 011f 42010000 		.4byte	.LASF25
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 34


 421 0123 02       		.byte	0x2
 422 0124 07       		.uleb128 0x7
 423 0125 86010000 		.4byte	.LASF26
 424 0129 03       		.byte	0x3
 425 012a 07       		.uleb128 0x7
 426 012b D7040000 		.4byte	.LASF27
 427 012f 04       		.byte	0x4
 428 0130 07       		.uleb128 0x7
 429 0131 1F050000 		.4byte	.LASF28
 430 0135 05       		.byte	0x5
 431 0136 07       		.uleb128 0x7
 432 0137 38050000 		.4byte	.LASF29
 433 013b 06       		.byte	0x6
 434 013c 07       		.uleb128 0x7
 435 013d 52060000 		.4byte	.LASF30
 436 0141 07       		.byte	0x7
 437 0142 07       		.uleb128 0x7
 438 0143 DF030000 		.4byte	.LASF31
 439 0147 08       		.byte	0x8
 440 0148 07       		.uleb128 0x7
 441 0149 0E040000 		.4byte	.LASF32
 442 014d 09       		.byte	0x9
 443 014e 07       		.uleb128 0x7
 444 014f DC010000 		.4byte	.LASF33
 445 0153 0A       		.byte	0xa
 446 0154 00       		.byte	0
 447 0155 05       		.uleb128 0x5
 448 0156 56010000 		.4byte	.LASF34
 449 015a 07       		.byte	0x7
 450 015b 5C04     		.2byte	0x45c
 451 015d 05010000 		.4byte	0x105
 452 0161 08       		.uleb128 0x8
 453 0162 FA020000 		.4byte	.LASF86
 454 0166 02       		.byte	0x2
 455 0167 F1       		.byte	0xf1
 456 0168 B4000000 		.4byte	0xb4
 457 016c 03       		.byte	0x3
 458 016d 7D010000 		.4byte	0x17d
 459 0171 09       		.uleb128 0x9
 460 0172 65010000 		.4byte	.LASF53
 461 0176 02       		.byte	0x2
 462 0177 F4       		.byte	0xf4
 463 0178 B4000000 		.4byte	0xb4
 464 017c 00       		.byte	0
 465 017d 0A       		.uleb128 0xa
 466 017e 5B040000 		.4byte	.LASF35
 467 0182 02       		.byte	0x2
 468 0183 DC       		.byte	0xdc
 469 0184 03       		.byte	0x3
 470 0185 93010000 		.4byte	0x193
 471 0189 0B       		.uleb128 0xb
 472 018a 6600     		.ascii	"f\000"
 473 018c 02       		.byte	0x2
 474 018d DC       		.byte	0xdc
 475 018e B4000000 		.4byte	0xb4
 476 0192 00       		.byte	0
 477 0193 0C       		.uleb128 0xc
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 35


 478 0194 18020000 		.4byte	.LASF36
 479 0198 07       		.byte	0x7
 480 0199 8E03     		.2byte	0x38e
 481 019b 03       		.byte	0x3
 482 019c AD010000 		.4byte	0x1ad
 483 01a0 0D       		.uleb128 0xd
 484 01a1 73727600 		.ascii	"srv\000"
 485 01a5 07       		.byte	0x7
 486 01a6 8E03     		.2byte	0x38e
 487 01a8 72000000 		.4byte	0x72
 488 01ac 00       		.byte	0
 489 01ad 0C       		.uleb128 0xc
 490 01ae 3E020000 		.4byte	.LASF37
 491 01b2 07       		.byte	0x7
 492 01b3 7B04     		.2byte	0x47b
 493 01b5 03       		.byte	0x3
 494 01b6 C7010000 		.4byte	0x1c7
 495 01ba 0D       		.uleb128 0xd
 496 01bb 63747800 		.ascii	"ctx\000"
 497 01bf 07       		.byte	0x7
 498 01c0 7C04     		.2byte	0x47c
 499 01c2 55010000 		.4byte	0x155
 500 01c6 00       		.byte	0
 501 01c7 0E       		.uleb128 0xe
 502 01c8 7E020000 		.4byte	.LASF41
 503 01cc 03       		.byte	0x3
 504 01cd D301     		.2byte	0x1d3
 505 01cf CA000000 		.4byte	0xca
 506 01d3 03       		.byte	0x3
 507 01d4 0C       		.uleb128 0xc
 508 01d5 47000000 		.4byte	.LASF38
 509 01d9 07       		.byte	0x7
 510 01da CA03     		.2byte	0x3ca
 511 01dc 03       		.byte	0x3
 512 01dd FA010000 		.4byte	0x1fa
 513 01e1 0F       		.uleb128 0xf
 514 01e2 6B010000 		.4byte	.LASF39
 515 01e6 07       		.byte	0x7
 516 01e7 CA03     		.2byte	0x3ca
 517 01e9 CA000000 		.4byte	0xca
 518 01ed 0F       		.uleb128 0xf
 519 01ee 33050000 		.4byte	.LASF40
 520 01f2 07       		.byte	0x7
 521 01f3 CA03     		.2byte	0x3ca
 522 01f5 A9000000 		.4byte	0xa9
 523 01f9 00       		.byte	0
 524 01fa 10       		.uleb128 0x10
 525 01fb A7030000 		.4byte	.LASF44
 526 01ff 03       		.byte	0x3
 527 0200 9A01     		.2byte	0x19a
 528 0202 03       		.byte	0x3
 529 0203 11       		.uleb128 0x11
 530 0204 66030000 		.4byte	.LASF42
 531 0208 03       		.byte	0x3
 532 0209 EC       		.byte	0xec
 533 020a CA000000 		.4byte	0xca
 534 020e 03       		.byte	0x3
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 36


 535 020f 0A       		.uleb128 0xa
 536 0210 12030000 		.4byte	.LASF43
 537 0214 05       		.byte	0x5
 538 0215 98       		.byte	0x98
 539 0216 03       		.byte	0x3
 540 0217 27020000 		.4byte	0x227
 541 021b 0B       		.uleb128 0xb
 542 021c 74696400 		.ascii	"tid\000"
 543 0220 05       		.byte	0x5
 544 0221 98       		.byte	0x98
 545 0222 CA000000 		.4byte	0xca
 546 0226 00       		.byte	0
 547 0227 10       		.uleb128 0x10
 548 0228 3B060000 		.4byte	.LASF45
 549 022c 03       		.byte	0x3
 550 022d 8C01     		.2byte	0x18c
 551 022f 03       		.byte	0x3
 552 0230 0A       		.uleb128 0xa
 553 0231 5A020000 		.4byte	.LASF46
 554 0235 05       		.byte	0x5
 555 0236 A5       		.byte	0xa5
 556 0237 03       		.byte	0x3
 557 0238 48020000 		.4byte	0x248
 558 023c 0B       		.uleb128 0xb
 559 023d 74696400 		.ascii	"tid\000"
 560 0241 05       		.byte	0x5
 561 0242 A5       		.byte	0xa5
 562 0243 CA000000 		.4byte	0xca
 563 0247 00       		.byte	0
 564 0248 0C       		.uleb128 0xc
 565 0249 24040000 		.4byte	.LASF47
 566 024d 07       		.byte	0x7
 567 024e C903     		.2byte	0x3c9
 568 0250 03       		.byte	0x3
 569 0251 62020000 		.4byte	0x262
 570 0255 0D       		.uleb128 0xd
 571 0256 746D7000 		.ascii	"tmp\000"
 572 025a 07       		.byte	0x7
 573 025b C903     		.2byte	0x3c9
 574 025d CA000000 		.4byte	0xca
 575 0261 00       		.byte	0
 576 0262 11       		.uleb128 0x11
 577 0263 EE040000 		.4byte	.LASF48
 578 0267 04       		.byte	0x4
 579 0268 4D       		.byte	0x4d
 580 0269 A9000000 		.4byte	0xa9
 581 026d 03       		.byte	0x3
 582 026e 10       		.uleb128 0x10
 583 026f 4B030000 		.4byte	.LASF49
 584 0273 08       		.byte	0x8
 585 0274 AB01     		.2byte	0x1ab
 586 0276 03       		.byte	0x3
 587 0277 0C       		.uleb128 0xc
 588 0278 98010000 		.4byte	.LASF50
 589 027c 07       		.byte	0x7
 590 027d 9A03     		.2byte	0x39a
 591 027f 03       		.byte	0x3
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 37


 592 0280 90020000 		.4byte	0x290
 593 0284 0D       		.uleb128 0xd
 594 0285 696400   		.ascii	"id\000"
 595 0288 07       		.byte	0x7
 596 0289 9A03     		.2byte	0x39a
 597 028b 72000000 		.4byte	0x72
 598 028f 00       		.byte	0
 599 0290 11       		.uleb128 0x11
 600 0291 7E060000 		.4byte	.LASF51
 601 0295 09       		.byte	0x9
 602 0296 60       		.byte	0x60
 603 0297 B4000000 		.4byte	0xb4
 604 029b 03       		.byte	0x3
 605 029c 0C       		.uleb128 0xc
 606 029d 44040000 		.4byte	.LASF52
 607 02a1 03       		.byte	0x3
 608 02a2 C202     		.2byte	0x2c2
 609 02a4 03       		.byte	0x3
 610 02a5 B6020000 		.4byte	0x2b6
 611 02a9 12       		.uleb128 0x12
 612 02aa 7D050000 		.4byte	.LASF54
 613 02ae 03       		.byte	0x3
 614 02af C402     		.2byte	0x2c4
 615 02b1 CA000000 		.4byte	0xca
 616 02b5 00       		.byte	0
 617 02b6 0A       		.uleb128 0xa
 618 02b7 DE020000 		.4byte	.LASF55
 619 02bb 09       		.byte	0x9
 620 02bc 68       		.byte	0x68
 621 02bd 03       		.byte	0x3
 622 02be CC020000 		.4byte	0x2cc
 623 02c2 0B       		.uleb128 0xb
 624 02c3 6600     		.ascii	"f\000"
 625 02c5 09       		.byte	0x9
 626 02c6 68       		.byte	0x68
 627 02c7 B4000000 		.4byte	0xb4
 628 02cb 00       		.byte	0
 629 02cc 0C       		.uleb128 0xc
 630 02cd 66060000 		.4byte	.LASF56
 631 02d1 07       		.byte	0x7
 632 02d2 9F03     		.2byte	0x39f
 633 02d4 03       		.byte	0x3
 634 02d5 E5020000 		.4byte	0x2e5
 635 02d9 0D       		.uleb128 0xd
 636 02da 696400   		.ascii	"id\000"
 637 02dd 07       		.byte	0x7
 638 02de 9F03     		.2byte	0x39f
 639 02e0 72000000 		.4byte	0x72
 640 02e4 00       		.byte	0
 641 02e5 0C       		.uleb128 0xc
 642 02e6 63050000 		.4byte	.LASF57
 643 02ea 03       		.byte	0x3
 644 02eb E002     		.2byte	0x2e0
 645 02ed 03       		.byte	0x3
 646 02ee FF020000 		.4byte	0x2ff
 647 02f2 12       		.uleb128 0x12
 648 02f3 5F000000 		.4byte	.LASF58
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 38


 649 02f7 03       		.byte	0x3
 650 02f8 E202     		.2byte	0x2e2
 651 02fa CA000000 		.4byte	0xca
 652 02fe 00       		.byte	0
 653 02ff 0C       		.uleb128 0xc
 654 0300 C8010000 		.4byte	.LASF59
 655 0304 03       		.byte	0x3
 656 0305 3202     		.2byte	0x232
 657 0307 03       		.byte	0x3
 658 0308 19030000 		.4byte	0x319
 659 030c 13       		.uleb128 0x13
 660 030d 746D7000 		.ascii	"tmp\000"
 661 0311 03       		.byte	0x3
 662 0312 3402     		.2byte	0x234
 663 0314 E1000000 		.4byte	0xe1
 664 0318 00       		.byte	0
 665 0319 14       		.uleb128 0x14
 666 031a F4030000 		.4byte	.LASF87
 667 031e 01       		.byte	0x1
 668 031f 43       		.byte	0x43
 669 0320 F9000000 		.4byte	0xf9
 670 0324 00000000 		.4byte	.LFB59
 671 0328 10010000 		.4byte	.LFE59-.LFB59
 672 032c 01       		.uleb128 0x1
 673 032d 9C       		.byte	0x9c
 674 032e 08050000 		.4byte	0x508
 675 0332 15       		.uleb128 0x15
 676 0333 2F030000 		.4byte	.LASF88
 677 0337 01       		.byte	0x1
 678 0338 43       		.byte	0x43
 679 0339 ED000000 		.4byte	0xed
 680 033d 00000000 		.4byte	.LLST0
 681 0341 09       		.uleb128 0x9
 682 0342 7D050000 		.4byte	.LASF54
 683 0346 01       		.byte	0x1
 684 0347 45       		.byte	0x45
 685 0348 E1000000 		.4byte	0xe1
 686 034c 16       		.uleb128 0x16
 687 034d 657600   		.ascii	"ev\000"
 688 0350 01       		.byte	0x1
 689 0351 47       		.byte	0x47
 690 0352 F9000000 		.4byte	0xf9
 691 0356 85000000 		.4byte	.LLST1
 692 035a 17       		.uleb128 0x17
 693 035b 85050000 		.4byte	.LASF60
 694 035f 01       		.byte	0x1
 695 0360 49       		.byte	0x49
 696 0361 B4000000 		.4byte	0xb4
 697 0365 01       		.uleb128 0x1
 698 0366 54       		.byte	0x54
 699 0367 18       		.uleb128 0x18
 700 0368 90020000 		.4byte	0x290
 701 036c 02000000 		.4byte	.LBB86
 702 0370 06000000 		.4byte	.LBE86-.LBB86
 703 0374 01       		.byte	0x1
 704 0375 49       		.byte	0x49
 705 0376 9E030000 		.4byte	0x39e
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 39


 706 037a 19       		.uleb128 0x19
 707 037b 61010000 		.4byte	0x161
 708 037f 02000000 		.4byte	.LBB87
 709 0383 06000000 		.4byte	.LBE87-.LBB87
 710 0387 09       		.byte	0x9
 711 0388 62       		.byte	0x62
 712 0389 1A       		.uleb128 0x1a
 713 038a 02000000 		.4byte	.LBB88
 714 038e 06000000 		.4byte	.LBE88-.LBB88
 715 0392 1B       		.uleb128 0x1b
 716 0393 71010000 		.4byte	0x171
 717 0397 A4000000 		.4byte	.LLST2
 718 039b 00       		.byte	0
 719 039c 00       		.byte	0
 720 039d 00       		.byte	0
 721 039e 1C       		.uleb128 0x1c
 722 039f 03020000 		.4byte	0x203
 723 03a3 08000000 		.4byte	.LBB89
 724 03a7 04000000 		.4byte	.LBE89-.LBB89
 725 03ab 01       		.byte	0x1
 726 03ac 4F       		.byte	0x4f
 727 03ad 1C       		.uleb128 0x1c
 728 03ae 62020000 		.4byte	0x262
 729 03b2 0C000000 		.4byte	.LBB91
 730 03b6 04000000 		.4byte	.LBE91-.LBB91
 731 03ba 01       		.byte	0x1
 732 03bb 63       		.byte	0x63
 733 03bc 18       		.uleb128 0x18
 734 03bd 9C020000 		.4byte	0x29c
 735 03c1 34000000 		.4byte	.LBB93
 736 03c5 28000000 		.4byte	.LBE93-.LBB93
 737 03c9 01       		.byte	0x1
 738 03ca 9C       		.byte	0x9c
 739 03cb EF030000 		.4byte	0x3ef
 740 03cf 1A       		.uleb128 0x1a
 741 03d0 34000000 		.4byte	.LBB94
 742 03d4 28000000 		.4byte	.LBE94-.LBB94
 743 03d8 1D       		.uleb128 0x1d
 744 03d9 A9020000 		.4byte	0x2a9
 745 03dd 1E       		.uleb128 0x1e
 746 03de C7010000 		.4byte	0x1c7
 747 03e2 52000000 		.4byte	.LBB95
 748 03e6 0A000000 		.4byte	.LBE95-.LBB95
 749 03ea 03       		.byte	0x3
 750 03eb DC02     		.2byte	0x2dc
 751 03ed 00       		.byte	0
 752 03ee 00       		.byte	0
 753 03ef 18       		.uleb128 0x18
 754 03f0 E5020000 		.4byte	0x2e5
 755 03f4 5C000000 		.4byte	.LBB97
 756 03f8 6A000000 		.4byte	.LBE97-.LBB97
 757 03fc 01       		.byte	0x1
 758 03fd A4       		.byte	0xa4
 759 03fe D5040000 		.4byte	0x4d5
 760 0402 1A       		.uleb128 0x1a
 761 0403 5C000000 		.4byte	.LBB98
 762 0407 6A000000 		.4byte	.LBE98-.LBB98
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 40


 763 040b 1B       		.uleb128 0x1b
 764 040c F2020000 		.4byte	0x2f2
 765 0410 B7000000 		.4byte	.LLST3
 766 0414 1E       		.uleb128 0x1e
 767 0415 03020000 		.4byte	0x203
 768 0419 74000000 		.4byte	.LBB99
 769 041d 04000000 		.4byte	.LBE99-.LBB99
 770 0421 03       		.byte	0x3
 771 0422 E802     		.2byte	0x2e8
 772 0424 1F       		.uleb128 0x1f
 773 0425 0F020000 		.4byte	0x20f
 774 0429 86000000 		.4byte	.LBB101
 775 042d 0A000000 		.4byte	.LBE101-.LBB101
 776 0431 03       		.byte	0x3
 777 0432 F502     		.2byte	0x2f5
 778 0434 4B040000 		.4byte	0x44b
 779 0438 20       		.uleb128 0x20
 780 0439 1B020000 		.4byte	0x21b
 781 043d D5000000 		.4byte	.LLST4
 782 0441 21       		.uleb128 0x21
 783 0442 8E000000 		.4byte	.LVL8
 784 0446 95060000 		.4byte	0x695
 785 044a 00       		.byte	0
 786 044b 1F       		.uleb128 0x1f
 787 044c FF020000 		.4byte	0x2ff
 788 0450 A4000000 		.4byte	.LBB103
 789 0454 22000000 		.4byte	.LBE103-.LBB103
 790 0458 03       		.byte	0x3
 791 0459 0503     		.2byte	0x305
 792 045b CA040000 		.4byte	0x4ca
 793 045f 1A       		.uleb128 0x1a
 794 0460 A4000000 		.4byte	.LBB104
 795 0464 22000000 		.4byte	.LBE104-.LBB104
 796 0468 1B       		.uleb128 0x1b
 797 0469 0C030000 		.4byte	0x30c
 798 046d E8000000 		.4byte	.LLST5
 799 0471 1F       		.uleb128 0x1f
 800 0472 0F020000 		.4byte	0x20f
 801 0476 B8000000 		.4byte	.LBB105
 802 047a 0A000000 		.4byte	.LBE105-.LBB105
 803 047e 03       		.byte	0x3
 804 047f 3C02     		.2byte	0x23c
 805 0481 98040000 		.4byte	0x498
 806 0485 20       		.uleb128 0x20
 807 0486 1B020000 		.4byte	0x21b
 808 048a 06010000 		.4byte	.LLST6
 809 048e 21       		.uleb128 0x21
 810 048f C0000000 		.4byte	.LVL13
 811 0493 95060000 		.4byte	0x695
 812 0497 00       		.byte	0
 813 0498 1F       		.uleb128 0x1f
 814 0499 30020000 		.4byte	0x230
 815 049d C2000000 		.4byte	.LBB107
 816 04a1 04000000 		.4byte	.LBE107-.LBB107
 817 04a5 03       		.byte	0x3
 818 04a6 3F02     		.2byte	0x23f
 819 04a8 BF040000 		.4byte	0x4bf
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 41


 820 04ac 20       		.uleb128 0x20
 821 04ad 3C020000 		.4byte	0x23c
 822 04b1 19010000 		.4byte	.LLST7
 823 04b5 21       		.uleb128 0x21
 824 04b6 C6000000 		.4byte	.LVL15
 825 04ba 95060000 		.4byte	0x695
 826 04be 00       		.byte	0
 827 04bf 21       		.uleb128 0x21
 828 04c0 A8000000 		.4byte	.LVL10
 829 04c4 A0060000 		.4byte	0x6a0
 830 04c8 00       		.byte	0
 831 04c9 00       		.byte	0
 832 04ca 21       		.uleb128 0x21
 833 04cb 60000000 		.4byte	.LVL4
 834 04cf AC060000 		.4byte	0x6ac
 835 04d3 00       		.byte	0
 836 04d4 00       		.byte	0
 837 04d5 19       		.uleb128 0x19
 838 04d6 B6020000 		.4byte	0x2b6
 839 04da DE000000 		.4byte	.LBB109
 840 04de 04000000 		.4byte	.LBE109-.LBB109
 841 04e2 01       		.byte	0x1
 842 04e3 B4       		.byte	0xb4
 843 04e4 20       		.uleb128 0x20
 844 04e5 C2020000 		.4byte	0x2c2
 845 04e9 2C010000 		.4byte	.LLST8
 846 04ed 19       		.uleb128 0x19
 847 04ee 7D010000 		.4byte	0x17d
 848 04f2 DE000000 		.4byte	.LBB110
 849 04f6 04000000 		.4byte	.LBE110-.LBB110
 850 04fa 09       		.byte	0x9
 851 04fb 6A       		.byte	0x6a
 852 04fc 20       		.uleb128 0x20
 853 04fd 89010000 		.4byte	0x189
 854 0501 2C010000 		.4byte	.LLST8
 855 0505 00       		.byte	0
 856 0506 00       		.byte	0
 857 0507 00       		.byte	0
 858 0508 22       		.uleb128 0x22
 859 0509 71010000 		.4byte	.LASF61
 860 050d 04       		.byte	0x4
 861 050e 44       		.byte	0x44
 862 050f A9000000 		.4byte	0xa9
 863 0513 22       		.uleb128 0x22
 864 0514 00000000 		.4byte	.LASF62
 865 0518 05       		.byte	0x5
 866 0519 48       		.byte	0x48
 867 051a CA000000 		.4byte	0xca
 868 051e 23       		.uleb128 0x23
 869 051f 34050000 		.4byte	0x534
 870 0523 2D050000 		.4byte	0x52d
 871 0527 24       		.uleb128 0x24
 872 0528 2D050000 		.4byte	0x52d
 873 052c 00       		.byte	0
 874 052d 02       		.uleb128 0x2
 875 052e 04       		.byte	0x4
 876 052f 07       		.byte	0x7
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 42


 877 0530 4D050000 		.4byte	.LASF63
 878 0534 25       		.uleb128 0x25
 879 0535 A9000000 		.4byte	0xa9
 880 0539 22       		.uleb128 0x22
 881 053a 31010000 		.4byte	.LASF64
 882 053e 07       		.byte	0x7
 883 053f B2       		.byte	0xb2
 884 0540 44050000 		.4byte	0x544
 885 0544 25       		.uleb128 0x25
 886 0545 1E050000 		.4byte	0x51e
 887 0549 23       		.uleb128 0x23
 888 054a 34050000 		.4byte	0x534
 889 054e 58050000 		.4byte	0x558
 890 0552 24       		.uleb128 0x24
 891 0553 2D050000 		.4byte	0x52d
 892 0557 00       		.byte	0
 893 0558 22       		.uleb128 0x22
 894 0559 0B050000 		.4byte	.LASF65
 895 055d 07       		.byte	0x7
 896 055e B3       		.byte	0xb3
 897 055f 63050000 		.4byte	0x563
 898 0563 25       		.uleb128 0x25
 899 0564 49050000 		.4byte	0x549
 900 0568 23       		.uleb128 0x23
 901 0569 A9000000 		.4byte	0xa9
 902 056d 77050000 		.4byte	0x577
 903 0571 24       		.uleb128 0x24
 904 0572 2D050000 		.4byte	0x52d
 905 0576 00       		.byte	0
 906 0577 22       		.uleb128 0x22
 907 0578 85030000 		.4byte	.LASF66
 908 057c 07       		.byte	0x7
 909 057d C1       		.byte	0xc1
 910 057e 68050000 		.4byte	0x568
 911 0582 23       		.uleb128 0x23
 912 0583 CA000000 		.4byte	0xca
 913 0587 91050000 		.4byte	0x591
 914 058b 24       		.uleb128 0x24
 915 058c 2D050000 		.4byte	0x52d
 916 0590 00       		.byte	0
 917 0591 22       		.uleb128 0x22
 918 0592 8A050000 		.4byte	.LASF67
 919 0596 07       		.byte	0x7
 920 0597 C9       		.byte	0xc9
 921 0598 82050000 		.4byte	0x582
 922 059c 23       		.uleb128 0x23
 923 059d A9000000 		.4byte	0xa9
 924 05a1 AB050000 		.4byte	0x5ab
 925 05a5 24       		.uleb128 0x24
 926 05a6 2D050000 		.4byte	0x52d
 927 05aa 00       		.byte	0
 928 05ab 22       		.uleb128 0x22
 929 05ac 92030000 		.4byte	.LASF68
 930 05b0 07       		.byte	0x7
 931 05b1 D1       		.byte	0xd1
 932 05b2 9C050000 		.4byte	0x59c
 933 05b6 22       		.uleb128 0x22
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 43


 934 05b7 B6040000 		.4byte	.LASF69
 935 05bb 07       		.byte	0x7
 936 05bc D9       		.byte	0xd9
 937 05bd CA000000 		.4byte	0xca
 938 05c1 22       		.uleb128 0x22
 939 05c2 6F020000 		.4byte	.LASF70
 940 05c6 07       		.byte	0x7
 941 05c7 EE       		.byte	0xee
 942 05c8 A9000000 		.4byte	0xa9
 943 05cc 26       		.uleb128 0x26
 944 05cd 31000000 		.4byte	.LASF71
 945 05d1 07       		.byte	0x7
 946 05d2 3601     		.2byte	0x136
 947 05d4 D5000000 		.4byte	0xd5
 948 05d8 23       		.uleb128 0x23
 949 05d9 A9000000 		.4byte	0xa9
 950 05dd E7050000 		.4byte	0x5e7
 951 05e1 24       		.uleb128 0x24
 952 05e2 2D050000 		.4byte	0x52d
 953 05e6 00       		.byte	0
 954 05e7 26       		.uleb128 0x26
 955 05e8 97040000 		.4byte	.LASF72
 956 05ec 07       		.byte	0x7
 957 05ed 5301     		.2byte	0x153
 958 05ef D8050000 		.4byte	0x5d8
 959 05f3 23       		.uleb128 0x23
 960 05f4 A9000000 		.4byte	0xa9
 961 05f8 02060000 		.4byte	0x602
 962 05fc 24       		.uleb128 0x24
 963 05fd 2D050000 		.4byte	0x52d
 964 0601 00       		.byte	0
 965 0602 26       		.uleb128 0x26
 966 0603 C2040000 		.4byte	.LASF73
 967 0607 07       		.byte	0x7
 968 0608 5801     		.2byte	0x158
 969 060a F3050000 		.4byte	0x5f3
 970 060e 23       		.uleb128 0x23
 971 060f BF000000 		.4byte	0xbf
 972 0613 1D060000 		.4byte	0x61d
 973 0617 24       		.uleb128 0x24
 974 0618 2D050000 		.4byte	0x52d
 975 061c 00       		.byte	0
 976 061d 26       		.uleb128 0x26
 977 061e CE000000 		.4byte	.LASF74
 978 0622 07       		.byte	0x7
 979 0623 5E01     		.2byte	0x15e
 980 0625 0E060000 		.4byte	0x60e
 981 0629 23       		.uleb128 0x23
 982 062a 38060000 		.4byte	0x638
 983 062e 38060000 		.4byte	0x638
 984 0632 24       		.uleb128 0x24
 985 0633 2D050000 		.4byte	0x52d
 986 0637 00       		.byte	0
 987 0638 25       		.uleb128 0x25
 988 0639 BF000000 		.4byte	0xbf
 989 063d 26       		.uleb128 0x26
 990 063e 2C020000 		.4byte	.LASF75
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 44


 991 0642 07       		.byte	0x7
 992 0643 6B01     		.2byte	0x16b
 993 0645 49060000 		.4byte	0x649
 994 0649 25       		.uleb128 0x25
 995 064a 29060000 		.4byte	0x629
 996 064e 22       		.uleb128 0x22
 997 064f 23060000 		.4byte	.LASF76
 998 0653 0A       		.byte	0xa
 999 0654 40       		.byte	0x40
 1000 0655 A9000000 		.4byte	0xa9
 1001 0659 22       		.uleb128 0x22
 1002 065a AF010000 		.4byte	.LASF77
 1003 065e 0A       		.byte	0xa
 1004 065f 47       		.byte	0x47
 1005 0660 B4000000 		.4byte	0xb4
 1006 0664 22       		.uleb128 0x22
 1007 0665 72040000 		.4byte	.LASF78
 1008 0669 0A       		.byte	0xa
 1009 066a 4A       		.byte	0x4a
 1010 066b A9000000 		.4byte	0xa9
 1011 066f 23       		.uleb128 0x23
 1012 0670 7F060000 		.4byte	0x67f
 1013 0674 7F060000 		.4byte	0x67f
 1014 0678 27       		.uleb128 0x27
 1015 0679 2D050000 		.4byte	0x52d
 1016 067d FF       		.byte	0xff
 1017 067e 00       		.byte	0
 1018 067f 25       		.uleb128 0x25
 1019 0680 7D000000 		.4byte	0x7d
 1020 0684 26       		.uleb128 0x26
 1021 0685 56050000 		.4byte	.LASF79
 1022 0689 03       		.byte	0x3
 1023 068a AB01     		.2byte	0x1ab
 1024 068c 90060000 		.4byte	0x690
 1025 0690 25       		.uleb128 0x25
 1026 0691 6F060000 		.4byte	0x66f
 1027 0695 28       		.uleb128 0x28
 1028 0696 AB020000 		.4byte	.LASF80
 1029 069a AB020000 		.4byte	.LASF80
 1030 069e 05       		.byte	0x5
 1031 069f 4F       		.byte	0x4f
 1032 06a0 29       		.uleb128 0x29
 1033 06a1 9C060000 		.4byte	.LASF81
 1034 06a5 9C060000 		.4byte	.LASF81
 1035 06a9 03       		.byte	0x3
 1036 06aa E901     		.2byte	0x1e9
 1037 06ac 29       		.uleb128 0x29
 1038 06ad 8E020000 		.4byte	.LASF82
 1039 06b1 8E020000 		.4byte	.LASF82
 1040 06b5 03       		.byte	0x3
 1041 06b6 CB01     		.2byte	0x1cb
 1042 06b8 00       		.byte	0
 1043              		.section	.debug_abbrev,"",%progbits
 1044              	.Ldebug_abbrev0:
 1045 0000 01       		.uleb128 0x1
 1046 0001 11       		.uleb128 0x11
 1047 0002 01       		.byte	0x1
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 45


 1048 0003 25       		.uleb128 0x25
 1049 0004 0E       		.uleb128 0xe
 1050 0005 13       		.uleb128 0x13
 1051 0006 0B       		.uleb128 0xb
 1052 0007 03       		.uleb128 0x3
 1053 0008 0E       		.uleb128 0xe
 1054 0009 1B       		.uleb128 0x1b
 1055 000a 0E       		.uleb128 0xe
 1056 000b 55       		.uleb128 0x55
 1057 000c 17       		.uleb128 0x17
 1058 000d 11       		.uleb128 0x11
 1059 000e 01       		.uleb128 0x1
 1060 000f 10       		.uleb128 0x10
 1061 0010 17       		.uleb128 0x17
 1062 0011 00       		.byte	0
 1063 0012 00       		.byte	0
 1064 0013 02       		.uleb128 0x2
 1065 0014 24       		.uleb128 0x24
 1066 0015 00       		.byte	0
 1067 0016 0B       		.uleb128 0xb
 1068 0017 0B       		.uleb128 0xb
 1069 0018 3E       		.uleb128 0x3e
 1070 0019 0B       		.uleb128 0xb
 1071 001a 03       		.uleb128 0x3
 1072 001b 0E       		.uleb128 0xe
 1073 001c 00       		.byte	0
 1074 001d 00       		.byte	0
 1075 001e 03       		.uleb128 0x3
 1076 001f 24       		.uleb128 0x24
 1077 0020 00       		.byte	0
 1078 0021 0B       		.uleb128 0xb
 1079 0022 0B       		.uleb128 0xb
 1080 0023 3E       		.uleb128 0x3e
 1081 0024 0B       		.uleb128 0xb
 1082 0025 03       		.uleb128 0x3
 1083 0026 08       		.uleb128 0x8
 1084 0027 00       		.byte	0
 1085 0028 00       		.byte	0
 1086 0029 04       		.uleb128 0x4
 1087 002a 16       		.uleb128 0x16
 1088 002b 00       		.byte	0
 1089 002c 03       		.uleb128 0x3
 1090 002d 0E       		.uleb128 0xe
 1091 002e 3A       		.uleb128 0x3a
 1092 002f 0B       		.uleb128 0xb
 1093 0030 3B       		.uleb128 0x3b
 1094 0031 0B       		.uleb128 0xb
 1095 0032 49       		.uleb128 0x49
 1096 0033 13       		.uleb128 0x13
 1097 0034 00       		.byte	0
 1098 0035 00       		.byte	0
 1099 0036 05       		.uleb128 0x5
 1100 0037 16       		.uleb128 0x16
 1101 0038 00       		.byte	0
 1102 0039 03       		.uleb128 0x3
 1103 003a 0E       		.uleb128 0xe
 1104 003b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 46


 1105 003c 0B       		.uleb128 0xb
 1106 003d 3B       		.uleb128 0x3b
 1107 003e 05       		.uleb128 0x5
 1108 003f 49       		.uleb128 0x49
 1109 0040 13       		.uleb128 0x13
 1110 0041 00       		.byte	0
 1111 0042 00       		.byte	0
 1112 0043 06       		.uleb128 0x6
 1113 0044 04       		.uleb128 0x4
 1114 0045 01       		.byte	0x1
 1115 0046 0B       		.uleb128 0xb
 1116 0047 0B       		.uleb128 0xb
 1117 0048 49       		.uleb128 0x49
 1118 0049 13       		.uleb128 0x13
 1119 004a 3A       		.uleb128 0x3a
 1120 004b 0B       		.uleb128 0xb
 1121 004c 3B       		.uleb128 0x3b
 1122 004d 05       		.uleb128 0x5
 1123 004e 01       		.uleb128 0x1
 1124 004f 13       		.uleb128 0x13
 1125 0050 00       		.byte	0
 1126 0051 00       		.byte	0
 1127 0052 07       		.uleb128 0x7
 1128 0053 28       		.uleb128 0x28
 1129 0054 00       		.byte	0
 1130 0055 03       		.uleb128 0x3
 1131 0056 0E       		.uleb128 0xe
 1132 0057 1C       		.uleb128 0x1c
 1133 0058 0B       		.uleb128 0xb
 1134 0059 00       		.byte	0
 1135 005a 00       		.byte	0
 1136 005b 08       		.uleb128 0x8
 1137 005c 2E       		.uleb128 0x2e
 1138 005d 01       		.byte	0x1
 1139 005e 03       		.uleb128 0x3
 1140 005f 0E       		.uleb128 0xe
 1141 0060 3A       		.uleb128 0x3a
 1142 0061 0B       		.uleb128 0xb
 1143 0062 3B       		.uleb128 0x3b
 1144 0063 0B       		.uleb128 0xb
 1145 0064 27       		.uleb128 0x27
 1146 0065 19       		.uleb128 0x19
 1147 0066 49       		.uleb128 0x49
 1148 0067 13       		.uleb128 0x13
 1149 0068 20       		.uleb128 0x20
 1150 0069 0B       		.uleb128 0xb
 1151 006a 01       		.uleb128 0x1
 1152 006b 13       		.uleb128 0x13
 1153 006c 00       		.byte	0
 1154 006d 00       		.byte	0
 1155 006e 09       		.uleb128 0x9
 1156 006f 34       		.uleb128 0x34
 1157 0070 00       		.byte	0
 1158 0071 03       		.uleb128 0x3
 1159 0072 0E       		.uleb128 0xe
 1160 0073 3A       		.uleb128 0x3a
 1161 0074 0B       		.uleb128 0xb
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 47


 1162 0075 3B       		.uleb128 0x3b
 1163 0076 0B       		.uleb128 0xb
 1164 0077 49       		.uleb128 0x49
 1165 0078 13       		.uleb128 0x13
 1166 0079 00       		.byte	0
 1167 007a 00       		.byte	0
 1168 007b 0A       		.uleb128 0xa
 1169 007c 2E       		.uleb128 0x2e
 1170 007d 01       		.byte	0x1
 1171 007e 03       		.uleb128 0x3
 1172 007f 0E       		.uleb128 0xe
 1173 0080 3A       		.uleb128 0x3a
 1174 0081 0B       		.uleb128 0xb
 1175 0082 3B       		.uleb128 0x3b
 1176 0083 0B       		.uleb128 0xb
 1177 0084 27       		.uleb128 0x27
 1178 0085 19       		.uleb128 0x19
 1179 0086 20       		.uleb128 0x20
 1180 0087 0B       		.uleb128 0xb
 1181 0088 01       		.uleb128 0x1
 1182 0089 13       		.uleb128 0x13
 1183 008a 00       		.byte	0
 1184 008b 00       		.byte	0
 1185 008c 0B       		.uleb128 0xb
 1186 008d 05       		.uleb128 0x5
 1187 008e 00       		.byte	0
 1188 008f 03       		.uleb128 0x3
 1189 0090 08       		.uleb128 0x8
 1190 0091 3A       		.uleb128 0x3a
 1191 0092 0B       		.uleb128 0xb
 1192 0093 3B       		.uleb128 0x3b
 1193 0094 0B       		.uleb128 0xb
 1194 0095 49       		.uleb128 0x49
 1195 0096 13       		.uleb128 0x13
 1196 0097 00       		.byte	0
 1197 0098 00       		.byte	0
 1198 0099 0C       		.uleb128 0xc
 1199 009a 2E       		.uleb128 0x2e
 1200 009b 01       		.byte	0x1
 1201 009c 03       		.uleb128 0x3
 1202 009d 0E       		.uleb128 0xe
 1203 009e 3A       		.uleb128 0x3a
 1204 009f 0B       		.uleb128 0xb
 1205 00a0 3B       		.uleb128 0x3b
 1206 00a1 05       		.uleb128 0x5
 1207 00a2 27       		.uleb128 0x27
 1208 00a3 19       		.uleb128 0x19
 1209 00a4 20       		.uleb128 0x20
 1210 00a5 0B       		.uleb128 0xb
 1211 00a6 01       		.uleb128 0x1
 1212 00a7 13       		.uleb128 0x13
 1213 00a8 00       		.byte	0
 1214 00a9 00       		.byte	0
 1215 00aa 0D       		.uleb128 0xd
 1216 00ab 05       		.uleb128 0x5
 1217 00ac 00       		.byte	0
 1218 00ad 03       		.uleb128 0x3
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 48


 1219 00ae 08       		.uleb128 0x8
 1220 00af 3A       		.uleb128 0x3a
 1221 00b0 0B       		.uleb128 0xb
 1222 00b1 3B       		.uleb128 0x3b
 1223 00b2 05       		.uleb128 0x5
 1224 00b3 49       		.uleb128 0x49
 1225 00b4 13       		.uleb128 0x13
 1226 00b5 00       		.byte	0
 1227 00b6 00       		.byte	0
 1228 00b7 0E       		.uleb128 0xe
 1229 00b8 2E       		.uleb128 0x2e
 1230 00b9 00       		.byte	0
 1231 00ba 03       		.uleb128 0x3
 1232 00bb 0E       		.uleb128 0xe
 1233 00bc 3A       		.uleb128 0x3a
 1234 00bd 0B       		.uleb128 0xb
 1235 00be 3B       		.uleb128 0x3b
 1236 00bf 05       		.uleb128 0x5
 1237 00c0 27       		.uleb128 0x27
 1238 00c1 19       		.uleb128 0x19
 1239 00c2 49       		.uleb128 0x49
 1240 00c3 13       		.uleb128 0x13
 1241 00c4 20       		.uleb128 0x20
 1242 00c5 0B       		.uleb128 0xb
 1243 00c6 00       		.byte	0
 1244 00c7 00       		.byte	0
 1245 00c8 0F       		.uleb128 0xf
 1246 00c9 05       		.uleb128 0x5
 1247 00ca 00       		.byte	0
 1248 00cb 03       		.uleb128 0x3
 1249 00cc 0E       		.uleb128 0xe
 1250 00cd 3A       		.uleb128 0x3a
 1251 00ce 0B       		.uleb128 0xb
 1252 00cf 3B       		.uleb128 0x3b
 1253 00d0 05       		.uleb128 0x5
 1254 00d1 49       		.uleb128 0x49
 1255 00d2 13       		.uleb128 0x13
 1256 00d3 00       		.byte	0
 1257 00d4 00       		.byte	0
 1258 00d5 10       		.uleb128 0x10
 1259 00d6 2E       		.uleb128 0x2e
 1260 00d7 00       		.byte	0
 1261 00d8 03       		.uleb128 0x3
 1262 00d9 0E       		.uleb128 0xe
 1263 00da 3A       		.uleb128 0x3a
 1264 00db 0B       		.uleb128 0xb
 1265 00dc 3B       		.uleb128 0x3b
 1266 00dd 05       		.uleb128 0x5
 1267 00de 27       		.uleb128 0x27
 1268 00df 19       		.uleb128 0x19
 1269 00e0 20       		.uleb128 0x20
 1270 00e1 0B       		.uleb128 0xb
 1271 00e2 00       		.byte	0
 1272 00e3 00       		.byte	0
 1273 00e4 11       		.uleb128 0x11
 1274 00e5 2E       		.uleb128 0x2e
 1275 00e6 00       		.byte	0
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 49


 1276 00e7 03       		.uleb128 0x3
 1277 00e8 0E       		.uleb128 0xe
 1278 00e9 3A       		.uleb128 0x3a
 1279 00ea 0B       		.uleb128 0xb
 1280 00eb 3B       		.uleb128 0x3b
 1281 00ec 0B       		.uleb128 0xb
 1282 00ed 27       		.uleb128 0x27
 1283 00ee 19       		.uleb128 0x19
 1284 00ef 49       		.uleb128 0x49
 1285 00f0 13       		.uleb128 0x13
 1286 00f1 20       		.uleb128 0x20
 1287 00f2 0B       		.uleb128 0xb
 1288 00f3 00       		.byte	0
 1289 00f4 00       		.byte	0
 1290 00f5 12       		.uleb128 0x12
 1291 00f6 34       		.uleb128 0x34
 1292 00f7 00       		.byte	0
 1293 00f8 03       		.uleb128 0x3
 1294 00f9 0E       		.uleb128 0xe
 1295 00fa 3A       		.uleb128 0x3a
 1296 00fb 0B       		.uleb128 0xb
 1297 00fc 3B       		.uleb128 0x3b
 1298 00fd 05       		.uleb128 0x5
 1299 00fe 49       		.uleb128 0x49
 1300 00ff 13       		.uleb128 0x13
 1301 0100 00       		.byte	0
 1302 0101 00       		.byte	0
 1303 0102 13       		.uleb128 0x13
 1304 0103 34       		.uleb128 0x34
 1305 0104 00       		.byte	0
 1306 0105 03       		.uleb128 0x3
 1307 0106 08       		.uleb128 0x8
 1308 0107 3A       		.uleb128 0x3a
 1309 0108 0B       		.uleb128 0xb
 1310 0109 3B       		.uleb128 0x3b
 1311 010a 05       		.uleb128 0x5
 1312 010b 49       		.uleb128 0x49
 1313 010c 13       		.uleb128 0x13
 1314 010d 00       		.byte	0
 1315 010e 00       		.byte	0
 1316 010f 14       		.uleb128 0x14
 1317 0110 2E       		.uleb128 0x2e
 1318 0111 01       		.byte	0x1
 1319 0112 3F       		.uleb128 0x3f
 1320 0113 19       		.uleb128 0x19
 1321 0114 03       		.uleb128 0x3
 1322 0115 0E       		.uleb128 0xe
 1323 0116 3A       		.uleb128 0x3a
 1324 0117 0B       		.uleb128 0xb
 1325 0118 3B       		.uleb128 0x3b
 1326 0119 0B       		.uleb128 0xb
 1327 011a 27       		.uleb128 0x27
 1328 011b 19       		.uleb128 0x19
 1329 011c 49       		.uleb128 0x49
 1330 011d 13       		.uleb128 0x13
 1331 011e 11       		.uleb128 0x11
 1332 011f 01       		.uleb128 0x1
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 50


 1333 0120 12       		.uleb128 0x12
 1334 0121 06       		.uleb128 0x6
 1335 0122 40       		.uleb128 0x40
 1336 0123 18       		.uleb128 0x18
 1337 0124 9742     		.uleb128 0x2117
 1338 0126 19       		.uleb128 0x19
 1339 0127 01       		.uleb128 0x1
 1340 0128 13       		.uleb128 0x13
 1341 0129 00       		.byte	0
 1342 012a 00       		.byte	0
 1343 012b 15       		.uleb128 0x15
 1344 012c 05       		.uleb128 0x5
 1345 012d 00       		.byte	0
 1346 012e 03       		.uleb128 0x3
 1347 012f 0E       		.uleb128 0xe
 1348 0130 3A       		.uleb128 0x3a
 1349 0131 0B       		.uleb128 0xb
 1350 0132 3B       		.uleb128 0x3b
 1351 0133 0B       		.uleb128 0xb
 1352 0134 49       		.uleb128 0x49
 1353 0135 13       		.uleb128 0x13
 1354 0136 02       		.uleb128 0x2
 1355 0137 17       		.uleb128 0x17
 1356 0138 00       		.byte	0
 1357 0139 00       		.byte	0
 1358 013a 16       		.uleb128 0x16
 1359 013b 34       		.uleb128 0x34
 1360 013c 00       		.byte	0
 1361 013d 03       		.uleb128 0x3
 1362 013e 08       		.uleb128 0x8
 1363 013f 3A       		.uleb128 0x3a
 1364 0140 0B       		.uleb128 0xb
 1365 0141 3B       		.uleb128 0x3b
 1366 0142 0B       		.uleb128 0xb
 1367 0143 49       		.uleb128 0x49
 1368 0144 13       		.uleb128 0x13
 1369 0145 02       		.uleb128 0x2
 1370 0146 17       		.uleb128 0x17
 1371 0147 00       		.byte	0
 1372 0148 00       		.byte	0
 1373 0149 17       		.uleb128 0x17
 1374 014a 34       		.uleb128 0x34
 1375 014b 00       		.byte	0
 1376 014c 03       		.uleb128 0x3
 1377 014d 0E       		.uleb128 0xe
 1378 014e 3A       		.uleb128 0x3a
 1379 014f 0B       		.uleb128 0xb
 1380 0150 3B       		.uleb128 0x3b
 1381 0151 0B       		.uleb128 0xb
 1382 0152 49       		.uleb128 0x49
 1383 0153 13       		.uleb128 0x13
 1384 0154 02       		.uleb128 0x2
 1385 0155 18       		.uleb128 0x18
 1386 0156 00       		.byte	0
 1387 0157 00       		.byte	0
 1388 0158 18       		.uleb128 0x18
 1389 0159 1D       		.uleb128 0x1d
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 51


 1390 015a 01       		.byte	0x1
 1391 015b 31       		.uleb128 0x31
 1392 015c 13       		.uleb128 0x13
 1393 015d 11       		.uleb128 0x11
 1394 015e 01       		.uleb128 0x1
 1395 015f 12       		.uleb128 0x12
 1396 0160 06       		.uleb128 0x6
 1397 0161 58       		.uleb128 0x58
 1398 0162 0B       		.uleb128 0xb
 1399 0163 59       		.uleb128 0x59
 1400 0164 0B       		.uleb128 0xb
 1401 0165 01       		.uleb128 0x1
 1402 0166 13       		.uleb128 0x13
 1403 0167 00       		.byte	0
 1404 0168 00       		.byte	0
 1405 0169 19       		.uleb128 0x19
 1406 016a 1D       		.uleb128 0x1d
 1407 016b 01       		.byte	0x1
 1408 016c 31       		.uleb128 0x31
 1409 016d 13       		.uleb128 0x13
 1410 016e 11       		.uleb128 0x11
 1411 016f 01       		.uleb128 0x1
 1412 0170 12       		.uleb128 0x12
 1413 0171 06       		.uleb128 0x6
 1414 0172 58       		.uleb128 0x58
 1415 0173 0B       		.uleb128 0xb
 1416 0174 59       		.uleb128 0x59
 1417 0175 0B       		.uleb128 0xb
 1418 0176 00       		.byte	0
 1419 0177 00       		.byte	0
 1420 0178 1A       		.uleb128 0x1a
 1421 0179 0B       		.uleb128 0xb
 1422 017a 01       		.byte	0x1
 1423 017b 11       		.uleb128 0x11
 1424 017c 01       		.uleb128 0x1
 1425 017d 12       		.uleb128 0x12
 1426 017e 06       		.uleb128 0x6
 1427 017f 00       		.byte	0
 1428 0180 00       		.byte	0
 1429 0181 1B       		.uleb128 0x1b
 1430 0182 34       		.uleb128 0x34
 1431 0183 00       		.byte	0
 1432 0184 31       		.uleb128 0x31
 1433 0185 13       		.uleb128 0x13
 1434 0186 02       		.uleb128 0x2
 1435 0187 17       		.uleb128 0x17
 1436 0188 00       		.byte	0
 1437 0189 00       		.byte	0
 1438 018a 1C       		.uleb128 0x1c
 1439 018b 1D       		.uleb128 0x1d
 1440 018c 00       		.byte	0
 1441 018d 31       		.uleb128 0x31
 1442 018e 13       		.uleb128 0x13
 1443 018f 11       		.uleb128 0x11
 1444 0190 01       		.uleb128 0x1
 1445 0191 12       		.uleb128 0x12
 1446 0192 06       		.uleb128 0x6
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 52


 1447 0193 58       		.uleb128 0x58
 1448 0194 0B       		.uleb128 0xb
 1449 0195 59       		.uleb128 0x59
 1450 0196 0B       		.uleb128 0xb
 1451 0197 00       		.byte	0
 1452 0198 00       		.byte	0
 1453 0199 1D       		.uleb128 0x1d
 1454 019a 34       		.uleb128 0x34
 1455 019b 00       		.byte	0
 1456 019c 31       		.uleb128 0x31
 1457 019d 13       		.uleb128 0x13
 1458 019e 00       		.byte	0
 1459 019f 00       		.byte	0
 1460 01a0 1E       		.uleb128 0x1e
 1461 01a1 1D       		.uleb128 0x1d
 1462 01a2 00       		.byte	0
 1463 01a3 31       		.uleb128 0x31
 1464 01a4 13       		.uleb128 0x13
 1465 01a5 11       		.uleb128 0x11
 1466 01a6 01       		.uleb128 0x1
 1467 01a7 12       		.uleb128 0x12
 1468 01a8 06       		.uleb128 0x6
 1469 01a9 58       		.uleb128 0x58
 1470 01aa 0B       		.uleb128 0xb
 1471 01ab 59       		.uleb128 0x59
 1472 01ac 05       		.uleb128 0x5
 1473 01ad 00       		.byte	0
 1474 01ae 00       		.byte	0
 1475 01af 1F       		.uleb128 0x1f
 1476 01b0 1D       		.uleb128 0x1d
 1477 01b1 01       		.byte	0x1
 1478 01b2 31       		.uleb128 0x31
 1479 01b3 13       		.uleb128 0x13
 1480 01b4 11       		.uleb128 0x11
 1481 01b5 01       		.uleb128 0x1
 1482 01b6 12       		.uleb128 0x12
 1483 01b7 06       		.uleb128 0x6
 1484 01b8 58       		.uleb128 0x58
 1485 01b9 0B       		.uleb128 0xb
 1486 01ba 59       		.uleb128 0x59
 1487 01bb 05       		.uleb128 0x5
 1488 01bc 01       		.uleb128 0x1
 1489 01bd 13       		.uleb128 0x13
 1490 01be 00       		.byte	0
 1491 01bf 00       		.byte	0
 1492 01c0 20       		.uleb128 0x20
 1493 01c1 05       		.uleb128 0x5
 1494 01c2 00       		.byte	0
 1495 01c3 31       		.uleb128 0x31
 1496 01c4 13       		.uleb128 0x13
 1497 01c5 02       		.uleb128 0x2
 1498 01c6 17       		.uleb128 0x17
 1499 01c7 00       		.byte	0
 1500 01c8 00       		.byte	0
 1501 01c9 21       		.uleb128 0x21
 1502 01ca 898201   		.uleb128 0x4109
 1503 01cd 00       		.byte	0
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 53


 1504 01ce 11       		.uleb128 0x11
 1505 01cf 01       		.uleb128 0x1
 1506 01d0 31       		.uleb128 0x31
 1507 01d1 13       		.uleb128 0x13
 1508 01d2 00       		.byte	0
 1509 01d3 00       		.byte	0
 1510 01d4 22       		.uleb128 0x22
 1511 01d5 34       		.uleb128 0x34
 1512 01d6 00       		.byte	0
 1513 01d7 03       		.uleb128 0x3
 1514 01d8 0E       		.uleb128 0xe
 1515 01d9 3A       		.uleb128 0x3a
 1516 01da 0B       		.uleb128 0xb
 1517 01db 3B       		.uleb128 0x3b
 1518 01dc 0B       		.uleb128 0xb
 1519 01dd 49       		.uleb128 0x49
 1520 01de 13       		.uleb128 0x13
 1521 01df 3F       		.uleb128 0x3f
 1522 01e0 19       		.uleb128 0x19
 1523 01e1 3C       		.uleb128 0x3c
 1524 01e2 19       		.uleb128 0x19
 1525 01e3 00       		.byte	0
 1526 01e4 00       		.byte	0
 1527 01e5 23       		.uleb128 0x23
 1528 01e6 01       		.uleb128 0x1
 1529 01e7 01       		.byte	0x1
 1530 01e8 49       		.uleb128 0x49
 1531 01e9 13       		.uleb128 0x13
 1532 01ea 01       		.uleb128 0x1
 1533 01eb 13       		.uleb128 0x13
 1534 01ec 00       		.byte	0
 1535 01ed 00       		.byte	0
 1536 01ee 24       		.uleb128 0x24
 1537 01ef 21       		.uleb128 0x21
 1538 01f0 00       		.byte	0
 1539 01f1 49       		.uleb128 0x49
 1540 01f2 13       		.uleb128 0x13
 1541 01f3 00       		.byte	0
 1542 01f4 00       		.byte	0
 1543 01f5 25       		.uleb128 0x25
 1544 01f6 26       		.uleb128 0x26
 1545 01f7 00       		.byte	0
 1546 01f8 49       		.uleb128 0x49
 1547 01f9 13       		.uleb128 0x13
 1548 01fa 00       		.byte	0
 1549 01fb 00       		.byte	0
 1550 01fc 26       		.uleb128 0x26
 1551 01fd 34       		.uleb128 0x34
 1552 01fe 00       		.byte	0
 1553 01ff 03       		.uleb128 0x3
 1554 0200 0E       		.uleb128 0xe
 1555 0201 3A       		.uleb128 0x3a
 1556 0202 0B       		.uleb128 0xb
 1557 0203 3B       		.uleb128 0x3b
 1558 0204 05       		.uleb128 0x5
 1559 0205 49       		.uleb128 0x49
 1560 0206 13       		.uleb128 0x13
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 54


 1561 0207 3F       		.uleb128 0x3f
 1562 0208 19       		.uleb128 0x19
 1563 0209 3C       		.uleb128 0x3c
 1564 020a 19       		.uleb128 0x19
 1565 020b 00       		.byte	0
 1566 020c 00       		.byte	0
 1567 020d 27       		.uleb128 0x27
 1568 020e 21       		.uleb128 0x21
 1569 020f 00       		.byte	0
 1570 0210 49       		.uleb128 0x49
 1571 0211 13       		.uleb128 0x13
 1572 0212 2F       		.uleb128 0x2f
 1573 0213 0B       		.uleb128 0xb
 1574 0214 00       		.byte	0
 1575 0215 00       		.byte	0
 1576 0216 28       		.uleb128 0x28
 1577 0217 2E       		.uleb128 0x2e
 1578 0218 00       		.byte	0
 1579 0219 3F       		.uleb128 0x3f
 1580 021a 19       		.uleb128 0x19
 1581 021b 3C       		.uleb128 0x3c
 1582 021c 19       		.uleb128 0x19
 1583 021d 6E       		.uleb128 0x6e
 1584 021e 0E       		.uleb128 0xe
 1585 021f 03       		.uleb128 0x3
 1586 0220 0E       		.uleb128 0xe
 1587 0221 3A       		.uleb128 0x3a
 1588 0222 0B       		.uleb128 0xb
 1589 0223 3B       		.uleb128 0x3b
 1590 0224 0B       		.uleb128 0xb
 1591 0225 00       		.byte	0
 1592 0226 00       		.byte	0
 1593 0227 29       		.uleb128 0x29
 1594 0228 2E       		.uleb128 0x2e
 1595 0229 00       		.byte	0
 1596 022a 3F       		.uleb128 0x3f
 1597 022b 19       		.uleb128 0x19
 1598 022c 3C       		.uleb128 0x3c
 1599 022d 19       		.uleb128 0x19
 1600 022e 6E       		.uleb128 0x6e
 1601 022f 0E       		.uleb128 0xe
 1602 0230 03       		.uleb128 0x3
 1603 0231 0E       		.uleb128 0xe
 1604 0232 3A       		.uleb128 0x3a
 1605 0233 0B       		.uleb128 0xb
 1606 0234 3B       		.uleb128 0x3b
 1607 0235 05       		.uleb128 0x5
 1608 0236 00       		.byte	0
 1609 0237 00       		.byte	0
 1610 0238 00       		.byte	0
 1611              		.section	.debug_loc,"",%progbits
 1612              	.Ldebug_loc0:
 1613              	.LLST0:
 1614 0000 00000000 		.4byte	.LVL0
 1615 0004 42000000 		.4byte	.LVL3
 1616 0008 0100     		.2byte	0x1
 1617 000a 50       		.byte	0x50
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 55


 1618 000b 5F000000 		.4byte	.LVL4-1
 1619 000f D0000000 		.4byte	.LVL17
 1620 0013 0400     		.2byte	0x4
 1621 0015 F3       		.byte	0xf3
 1622 0016 01       		.uleb128 0x1
 1623 0017 50       		.byte	0x50
 1624 0018 9F       		.byte	0x9f
 1625 0019 D0000000 		.4byte	.LVL17
 1626 001d D2000000 		.4byte	.LVL18
 1627 0021 0100     		.2byte	0x1
 1628 0023 50       		.byte	0x50
 1629 0024 D2000000 		.4byte	.LVL18
 1630 0028 D4000000 		.4byte	.LVL19
 1631 002c 0400     		.2byte	0x4
 1632 002e F3       		.byte	0xf3
 1633 002f 01       		.uleb128 0x1
 1634 0030 50       		.byte	0x50
 1635 0031 9F       		.byte	0x9f
 1636 0032 D4000000 		.4byte	.LVL19
 1637 0036 D6000000 		.4byte	.LVL20
 1638 003a 0100     		.2byte	0x1
 1639 003c 50       		.byte	0x50
 1640 003d D6000000 		.4byte	.LVL20
 1641 0041 D8000000 		.4byte	.LVL21
 1642 0045 0400     		.2byte	0x4
 1643 0047 F3       		.byte	0xf3
 1644 0048 01       		.uleb128 0x1
 1645 0049 50       		.byte	0x50
 1646 004a 9F       		.byte	0x9f
 1647 004b D8000000 		.4byte	.LVL21
 1648 004f DA000000 		.4byte	.LVL22
 1649 0053 0100     		.2byte	0x1
 1650 0055 50       		.byte	0x50
 1651 0056 DA000000 		.4byte	.LVL22
 1652 005a DC000000 		.4byte	.LVL23
 1653 005e 0400     		.2byte	0x4
 1654 0060 F3       		.byte	0xf3
 1655 0061 01       		.uleb128 0x1
 1656 0062 50       		.byte	0x50
 1657 0063 9F       		.byte	0x9f
 1658 0064 DC000000 		.4byte	.LVL23
 1659 0068 DE000000 		.4byte	.LVL24
 1660 006c 0100     		.2byte	0x1
 1661 006e 50       		.byte	0x50
 1662 006f DE000000 		.4byte	.LVL24
 1663 0073 10010000 		.4byte	.LFE59
 1664 0077 0400     		.2byte	0x4
 1665 0079 F3       		.byte	0xf3
 1666 007a 01       		.uleb128 0x1
 1667 007b 50       		.byte	0x50
 1668 007c 9F       		.byte	0x9f
 1669 007d 00000000 		.4byte	0
 1670 0081 00000000 		.4byte	0
 1671              	.LLST1:
 1672 0085 CE000000 		.4byte	.LVL16
 1673 0089 D0000000 		.4byte	.LVL17
 1674 008d 0200     		.2byte	0x2
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 56


 1675 008f 30       		.byte	0x30
 1676 0090 9F       		.byte	0x9f
 1677 0091 DE000000 		.4byte	.LVL24
 1678 0095 10010000 		.4byte	.LFE59
 1679 0099 0100     		.2byte	0x1
 1680 009b 50       		.byte	0x50
 1681 009c 00000000 		.4byte	0
 1682 00a0 00000000 		.4byte	0
 1683              	.LLST2:
 1684 00a4 06000000 		.4byte	.LVL1
 1685 00a8 08000000 		.4byte	.LVL2
 1686 00ac 0100     		.2byte	0x1
 1687 00ae 54       		.byte	0x54
 1688 00af 00000000 		.4byte	0
 1689 00b3 00000000 		.4byte	0
 1690              	.LLST3:
 1691 00b7 60000000 		.4byte	.LVL4
 1692 00bb 78000000 		.4byte	.LVL5
 1693 00bf 0100     		.2byte	0x1
 1694 00c1 50       		.byte	0x50
 1695 00c2 90000000 		.4byte	.LVL9
 1696 00c6 A7000000 		.4byte	.LVL10-1
 1697 00ca 0100     		.2byte	0x1
 1698 00cc 50       		.byte	0x50
 1699 00cd 00000000 		.4byte	0
 1700 00d1 00000000 		.4byte	0
 1701              	.LLST4:
 1702 00d5 86000000 		.4byte	.LVL6
 1703 00d9 8A000000 		.4byte	.LVL7
 1704 00dd 0100     		.2byte	0x1
 1705 00df 50       		.byte	0x50
 1706 00e0 00000000 		.4byte	0
 1707 00e4 00000000 		.4byte	0
 1708              	.LLST5:
 1709 00e8 A8000000 		.4byte	.LVL10
 1710 00ec BC000000 		.4byte	.LVL12
 1711 00f0 0100     		.2byte	0x1
 1712 00f2 50       		.byte	0x50
 1713 00f3 C2000000 		.4byte	.LVL14
 1714 00f7 C5000000 		.4byte	.LVL15-1
 1715 00fb 0100     		.2byte	0x1
 1716 00fd 50       		.byte	0x50
 1717 00fe 00000000 		.4byte	0
 1718 0102 00000000 		.4byte	0
 1719              	.LLST6:
 1720 0106 B8000000 		.4byte	.LVL11
 1721 010a BC000000 		.4byte	.LVL12
 1722 010e 0100     		.2byte	0x1
 1723 0110 50       		.byte	0x50
 1724 0111 00000000 		.4byte	0
 1725 0115 00000000 		.4byte	0
 1726              	.LLST7:
 1727 0119 C2000000 		.4byte	.LVL14
 1728 011d C5000000 		.4byte	.LVL15-1
 1729 0121 0100     		.2byte	0x1
 1730 0123 50       		.byte	0x50
 1731 0124 00000000 		.4byte	0
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 57


 1732 0128 00000000 		.4byte	0
 1733              	.LLST8:
 1734 012c DE000000 		.4byte	.LVL24
 1735 0130 E2000000 		.4byte	.LVL25
 1736 0134 0100     		.2byte	0x1
 1737 0136 54       		.byte	0x54
 1738 0137 00000000 		.4byte	0
 1739 013b 00000000 		.4byte	0
 1740              		.section	.debug_aranges,"",%progbits
 1741 0000 1C000000 		.4byte	0x1c
 1742 0004 0200     		.2byte	0x2
 1743 0006 00000000 		.4byte	.Ldebug_info0
 1744 000a 04       		.byte	0x4
 1745 000b 00       		.byte	0
 1746 000c 0000     		.2byte	0
 1747 000e 0000     		.2byte	0
 1748 0010 00000000 		.4byte	.LFB59
 1749 0014 10010000 		.4byte	.LFE59-.LFB59
 1750 0018 00000000 		.4byte	0
 1751 001c 00000000 		.4byte	0
 1752              		.section	.debug_ranges,"",%progbits
 1753              	.Ldebug_ranges0:
 1754 0000 00000000 		.4byte	.LFB59
 1755 0004 10010000 		.4byte	.LFE59
 1756 0008 00000000 		.4byte	0
 1757 000c 00000000 		.4byte	0
 1758              		.section	.debug_line,"",%progbits
 1759              	.Ldebug_line0:
 1760 0000 EB010000 		.section	.debug_str,"MS",%progbits,1
 1760      02006201 
 1760      00000201 
 1760      FB0E0D00 
 1760      01010101 
 1761              	.LASF62:
 1762 0000 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 1762      74645F65 
 1762      6E646379 
 1762      636C655F 
 1762      6E657874 
 1763              	.LASF23:
 1764 0019 4B65726E 		.ascii	"Kernel_Context\000"
 1764      656C5F43 
 1764      6F6E7465 
 1764      787400
 1765              	.LASF10:
 1766 0028 45455F55 		.ascii	"EE_UINT8\000"
 1766      494E5438 
 1766      00
 1767              	.LASF71:
 1768 0031 45455F72 		.ascii	"EE_rq_bitmask\000"
 1768      715F6269 
 1768      746D6173 
 1768      6B00
 1769              	.LASF15:
 1770 003f 45455F55 		.ascii	"EE_UREG\000"
 1770      52454700 
 1771              	.LASF38:
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 58


 1772 0047 45455F4F 		.ascii	"EE_ORTI_set_th_priority\000"
 1772      5254495F 
 1772      7365745F 
 1772      74685F70 
 1772      72696F72 
 1773              	.LASF58:
 1774 005f 6E657874 		.ascii	"nexttask\000"
 1774      7461736B 
 1774      00
 1775              	.LASF21:
 1776 0068 4576656E 		.ascii	"EventMaskType\000"
 1776      744D6173 
 1776      6B547970 
 1776      6500
 1777              	.LASF85:
 1778 0076 443A5C48 		.ascii	"D:\\HDA\\1_sem\\Embedded System Design\\Lab\\Assign"
 1778      44415C31 
 1778      5F73656D 
 1778      5C456D62 
 1778      65646465 
 1779 00a4 6D656E74 		.ascii	"ment_1\\ReactionGame_OS\\ReactionGame.cydsn\000"
 1779      5F315C52 
 1779      65616374 
 1779      696F6E47 
 1779      616D655F 
 1780              	.LASF74:
 1781 00ce 45455F74 		.ascii	"EE_th_waswaiting\000"
 1781      685F7761 
 1781      73776169 
 1781      74696E67 
 1781      00
 1782              	.LASF2:
 1783 00df 73686F72 		.ascii	"short int\000"
 1783      7420696E 
 1783      7400
 1784              	.LASF22:
 1785 00e9 53746174 		.ascii	"StatusType\000"
 1785      75735479 
 1785      706500
 1786              	.LASF84:
 1787 00f4 47656E65 		.ascii	"Generated_Source\\PSoC5\\ErikaOS_ee_evwait.c\000"
 1787      72617465 
 1787      645F536F 
 1787      75726365 
 1787      5C50536F 
 1788              	.LASF16:
 1789 011f 45455F46 		.ascii	"EE_FREG\000"
 1789      52454700 
 1790              	.LASF14:
 1791 0127 45455F55 		.ascii	"EE_UINT32\000"
 1791      494E5433 
 1791      3200
 1792              	.LASF64:
 1793 0131 45455F74 		.ascii	"EE_th_ready_prio\000"
 1793      685F7265 
 1793      6164795F 
 1793      7072696F 
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 59


 1793      00
 1794              	.LASF25:
 1795 0142 49535232 		.ascii	"ISR2_Context\000"
 1795      5F436F6E 
 1795      74657874 
 1795      00
 1796              	.LASF18:
 1797 014f 45455F54 		.ascii	"EE_TID\000"
 1797      494400
 1798              	.LASF34:
 1799 0156 45455F54 		.ascii	"EE_TYPECONTEXT\000"
 1799      59504543 
 1799      4F4E5445 
 1799      585400
 1800              	.LASF53:
 1801 0165 69737461 		.ascii	"istat\000"
 1801      7400
 1802              	.LASF39:
 1803 016b 696E6465 		.ascii	"index\000"
 1803      7800
 1804              	.LASF61:
 1805 0171 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 1805      52515F6E 
 1805      65737469 
 1805      6E675F6C 
 1805      6576656C 
 1806              	.LASF26:
 1807 0186 4572726F 		.ascii	"ErrorHook_Context\000"
 1807      72486F6F 
 1807      6B5F436F 
 1807      6E746578 
 1807      7400
 1808              	.LASF50:
 1809 0198 45455F4F 		.ascii	"EE_ORTI_set_service_in\000"
 1809      5254495F 
 1809      7365745F 
 1809      73657276 
 1809      6963655F 
 1810              	.LASF77:
 1811 01af 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 1811      6F5F4952 
 1811      515F7375 
 1811      7370656E 
 1811      645F7374 
 1812              	.LASF59:
 1813 01c8 45455F6F 		.ascii	"EE_oo_run_next_task\000"
 1813      6F5F7275 
 1813      6E5F6E65 
 1813      78745F74 
 1813      61736B00 
 1814              	.LASF33:
 1815 01dc 49646C65 		.ascii	"Idle_Context\000"
 1815      5F436F6E 
 1815      74657874 
 1815      00
 1816              	.LASF6:
 1817 01e9 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 60


 1817      206C6F6E 
 1817      6720696E 
 1817      7400
 1818              	.LASF11:
 1819 01f7 45455F49 		.ascii	"EE_INT8\000"
 1819      4E543800 
 1820              	.LASF19:
 1821 01ff 45455F54 		.ascii	"EE_TYPE_RQ_MASK\000"
 1821      5950455F 
 1821      52515F4D 
 1821      41534B00 
 1822              	.LASF4:
 1823 020f 6C6F6E67 		.ascii	"long int\000"
 1823      20696E74 
 1823      00
 1824              	.LASF36:
 1825 0218 45455F4F 		.ascii	"EE_ORTI_set_service\000"
 1825      5254495F 
 1825      7365745F 
 1825      73657276 
 1825      69636500 
 1826              	.LASF75:
 1827 022c 45455F74 		.ascii	"EE_th_is_extended\000"
 1827      685F6973 
 1827      5F657874 
 1827      656E6465 
 1827      6400
 1828              	.LASF37:
 1829 023e 45455F61 		.ascii	"EE_as_set_execution_context\000"
 1829      735F7365 
 1829      745F6578 
 1829      65637574 
 1829      696F6E5F 
 1830              	.LASF46:
 1831 025a 45455F68 		.ascii	"EE_hal_ready2stacked\000"
 1831      616C5F72 
 1831      65616479 
 1831      32737461 
 1831      636B6564 
 1832              	.LASF70:
 1833 026f 45455F73 		.ascii	"EE_sys_ceiling\000"
 1833      79735F63 
 1833      65696C69 
 1833      6E6700
 1834              	.LASF41:
 1835 027e 45455F73 		.ascii	"EE_stk_getfirst\000"
 1835      746B5F67 
 1835      65746669 
 1835      72737400 
 1836              	.LASF82:
 1837 028e 45455F72 		.ascii	"EE_rq_queryfirst\000"
 1837      715F7175 
 1837      65727966 
 1837      69727374 
 1837      00
 1838              	.LASF9:
 1839 029f 6C6F6E67 		.ascii	"long double\000"
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 61


 1839      20646F75 
 1839      626C6500 
 1840              	.LASF80:
 1841 02ab 45455F63 		.ascii	"EE_cortex_mx_change_context\000"
 1841      6F727465 
 1841      785F6D78 
 1841      5F636861 
 1841      6E67655F 
 1842              	.LASF20:
 1843 02c7 5461736B 		.ascii	"TaskType\000"
 1843      54797065 
 1843      00
 1844              	.LASF1:
 1845 02d0 756E7369 		.ascii	"unsigned char\000"
 1845      676E6564 
 1845      20636861 
 1845      7200
 1846              	.LASF55:
 1847 02de 45455F68 		.ascii	"EE_hal_end_nested_primitive\000"
 1847      616C5F65 
 1847      6E645F6E 
 1847      65737465 
 1847      645F7072 
 1848              	.LASF86:
 1849 02fa 45455F63 		.ascii	"EE_cortex_mx_suspendIRQ\000"
 1849      6F727465 
 1849      785F6D78 
 1849      5F737573 
 1849      70656E64 
 1850              	.LASF43:
 1851 0312 45455F68 		.ascii	"EE_hal_stkchange\000"
 1851      616C5F73 
 1851      746B6368 
 1851      616E6765 
 1851      00
 1852              	.LASF0:
 1853 0323 7369676E 		.ascii	"signed char\000"
 1853      65642063 
 1853      68617200 
 1854              	.LASF88:
 1855 032f 4D61736B 		.ascii	"Mask\000"
 1855      00
 1856              	.LASF7:
 1857 0334 6C6F6E67 		.ascii	"long long unsigned int\000"
 1857      206C6F6E 
 1857      6720756E 
 1857      7369676E 
 1857      65642069 
 1858              	.LASF49:
 1859 034b 45455F61 		.ascii	"EE_as_monitoring_the_stack\000"
 1859      735F6D6F 
 1859      6E69746F 
 1859      72696E67 
 1859      5F746865 
 1860              	.LASF42:
 1861 0366 45455F73 		.ascii	"EE_stk_queryfirst\000"
 1861      746B5F71 
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 62


 1861      75657279 
 1861      66697273 
 1861      7400
 1862              	.LASF8:
 1863 0378 756E7369 		.ascii	"unsigned int\000"
 1863      676E6564 
 1863      20696E74 
 1863      00
 1864              	.LASF66:
 1865 0385 45455F74 		.ascii	"EE_th_status\000"
 1865      685F7374 
 1865      61747573 
 1865      00
 1866              	.LASF68:
 1867 0392 45455F74 		.ascii	"EE_th_rnact\000"
 1867      685F726E 
 1867      61637400 
 1868              	.LASF13:
 1869 039e 45455F49 		.ascii	"EE_INT32\000"
 1869      4E543332 
 1869      00
 1870              	.LASF44:
 1871 03a7 45455F6F 		.ascii	"EE_oo_call_PostTaskHook\000"
 1871      6F5F6361 
 1871      6C6C5F50 
 1871      6F737454 
 1871      61736B48 
 1872              	.LASF24:
 1873 03bf 5441534B 		.ascii	"TASK_Context\000"
 1873      5F436F6E 
 1873      74657874 
 1873      00
 1874              	.LASF3:
 1875 03cc 73686F72 		.ascii	"short unsigned int\000"
 1875      7420756E 
 1875      7369676E 
 1875      65642069 
 1875      6E7400
 1876              	.LASF31:
 1877 03df 53687574 		.ascii	"ShutdownHook_Context\000"
 1877      646F776E 
 1877      486F6F6B 
 1877      5F436F6E 
 1877      74657874 
 1878              	.LASF87:
 1879 03f4 45455F6F 		.ascii	"EE_oo_WaitEvent\000"
 1879      6F5F5761 
 1879      69744576 
 1879      656E7400 
 1880              	.LASF12:
 1881 0404 45455F55 		.ascii	"EE_UINT16\000"
 1881      494E5431 
 1881      3600
 1882              	.LASF32:
 1883 040e 416C6172 		.ascii	"AlarmCallback_Context\000"
 1883      6D43616C 
 1883      6C626163 
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 63


 1883      6B5F436F 
 1883      6E746578 
 1884              	.LASF47:
 1885 0424 45455F4F 		.ascii	"EE_ORTI_set_th_eq_dispatch_prio\000"
 1885      5254495F 
 1885      7365745F 
 1885      74685F65 
 1885      715F6469 
 1886              	.LASF52:
 1887 0444 45455F6F 		.ascii	"EE_oo_prepare_to_block\000"
 1887      6F5F7072 
 1887      65706172 
 1887      655F746F 
 1887      5F626C6F 
 1888              	.LASF35:
 1889 045b 45455F63 		.ascii	"EE_cortex_mx_resumeIRQ\000"
 1889      6F727465 
 1889      785F6D78 
 1889      5F726573 
 1889      756D6549 
 1890              	.LASF78:
 1891 0472 45455F41 		.ascii	"EE_ApplicationMode\000"
 1891      70706C69 
 1891      63617469 
 1891      6F6E4D6F 
 1891      646500
 1892              	.LASF5:
 1893 0485 6C6F6E67 		.ascii	"long unsigned int\000"
 1893      20756E73 
 1893      69676E65 
 1893      6420696E 
 1893      7400
 1894              	.LASF72:
 1895 0497 45455F74 		.ascii	"EE_th_event_active\000"
 1895      685F6576 
 1895      656E745F 
 1895      61637469 
 1895      766500
 1896              	.LASF17:
 1897 04aa 45455F54 		.ascii	"EE_TYPEBOOL\000"
 1897      59504542 
 1897      4F4F4C00 
 1898              	.LASF69:
 1899 04b6 45455F73 		.ascii	"EE_stkfirst\000"
 1899      746B6669 
 1899      72737400 
 1900              	.LASF73:
 1901 04c2 45455F74 		.ascii	"EE_th_event_waitmask\000"
 1901      685F6576 
 1901      656E745F 
 1901      77616974 
 1901      6D61736B 
 1902              	.LASF27:
 1903 04d7 50726F74 		.ascii	"ProtectionHook_Context\000"
 1903      65637469 
 1903      6F6E486F 
 1903      6F6B5F43 
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 64


 1903      6F6E7465 
 1904              	.LASF48:
 1905 04ee 45455F68 		.ascii	"EE_hal_get_IRQ_nesting_level\000"
 1905      616C5F67 
 1905      65745F49 
 1905      52515F6E 
 1905      65737469 
 1906              	.LASF65:
 1907 050b 45455F74 		.ascii	"EE_th_dispatch_prio\000"
 1907      685F6469 
 1907      73706174 
 1907      63685F70 
 1907      72696F00 
 1908              	.LASF28:
 1909 051f 50726554 		.ascii	"PreTaskHook_Context\000"
 1909      61736B48 
 1909      6F6F6B5F 
 1909      436F6E74 
 1909      65787400 
 1910              	.LASF40:
 1911 0533 7072696F 		.ascii	"prio\000"
 1911      00
 1912              	.LASF29:
 1913 0538 506F7374 		.ascii	"PostTaskHook_Context\000"
 1913      5461736B 
 1913      486F6F6B 
 1913      5F436F6E 
 1913      74657874 
 1914              	.LASF63:
 1915 054d 73697A65 		.ascii	"sizetype\000"
 1915      74797065 
 1915      00
 1916              	.LASF79:
 1917 0556 45455F72 		.ascii	"EE_rq_lookup\000"
 1917      715F6C6F 
 1917      6F6B7570 
 1917      00
 1918              	.LASF57:
 1919 0563 45455F6F 		.ascii	"EE_oo_reschedule_on_block\000"
 1919      6F5F7265 
 1919      73636865 
 1919      64756C65 
 1919      5F6F6E5F 
 1920              	.LASF54:
 1921 057d 63757272 		.ascii	"current\000"
 1921      656E7400 
 1922              	.LASF60:
 1923 0585 666C6167 		.ascii	"flag\000"
 1923      00
 1924              	.LASF67:
 1925 058a 45455F74 		.ascii	"EE_th_next\000"
 1925      685F6E65 
 1925      787400
 1926              	.LASF83:
 1927 0595 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1927      43313120 
 1927      352E342E 
ARM GAS  C:\Users\rbhar\AppData\Local\Temp\ccge1leG.s 			page 65


 1927      31203230 
 1927      31363036 
 1928 05c8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1928      20726576 
 1928      6973696F 
 1928      6E203233 
 1928      37373135 
 1929 05fb 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1929      66756E63 
 1929      74696F6E 
 1929      2D736563 
 1929      74696F6E 
 1930              	.LASF76:
 1931 0623 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 1931      6F5F4952 
 1931      515F6469 
 1931      7361626C 
 1931      655F636F 
 1932              	.LASF45:
 1933 063b 45455F6F 		.ascii	"EE_oo_call_PreTaskHook\000"
 1933      6F5F6361 
 1933      6C6C5F50 
 1933      72655461 
 1933      736B486F 
 1934              	.LASF30:
 1935 0652 53746172 		.ascii	"StartupHook_Context\000"
 1935      74757048 
 1935      6F6F6B5F 
 1935      436F6E74 
 1935      65787400 
 1936              	.LASF56:
 1937 0666 45455F4F 		.ascii	"EE_ORTI_set_service_out\000"
 1937      5254495F 
 1937      7365745F 
 1937      73657276 
 1937      6963655F 
 1938              	.LASF51:
 1939 067e 45455F68 		.ascii	"EE_hal_begin_nested_primitive\000"
 1939      616C5F62 
 1939      6567696E 
 1939      5F6E6573 
 1939      7465645F 
 1940              	.LASF81:
 1941 069c 45455F72 		.ascii	"EE_rq2stk_exchange\000"
 1941      71327374 
 1941      6B5F6578 
 1941      6368616E 
 1941      676500
 1942              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
