/*
 * $Name/$_type.h
 *
 *  Created on: 01.05.2016
 *      Author: Autogenerated by H-DA RTE Generator, (c) Prof. Fromm, 2016
 */



#ifndef $NAME/$_TYPE_H_
#define $NAME/$_TYPE_H_

#include "global.h"

/*****************************************************************************************
 *************** Type Definition for $NAME/$  signal class **************************
 *****************************************************************************************/

#error "Replace with user specific type"
typedef ...YOURTYPE $Type_raw/$;

typedef struct
{
	...YOURDATA
} $Type_app/$;

#error "Provide a sensible init value"
#define $NAME/$_INIT_DATA (($NAME/$_data_t){0})
#define $NAME/$_INIT_RAW  (($NAME/$_raw_t)0)

/*****************************************************************************************
 *************** Type specific scaler functions ******************************************
 *****************************************************************************************/
#ifdef  __cplusplus
extern "C"
{
#endif

/**
 * Scaler to translate bytestream protocol into ENGINE application data type
 * @param const $Type_raw/$ * const praw  ==> INPUT: Pointer to the signal raw data object
 * @param const $Type_app/$ * const pvalue ==> OUTPUT: Pointer to the signal application data object
 */
RC_t $NAME/$_scaleR2D( const $Type_raw/$ * const praw, $Type_app/$ * const pvalue);

/**
 * Scaler to translate engine control speed into CanOpen protocol
 * @param const $Type_app/$ const pvalue ==> INPUT: Pointer to the signal application data object
 * @param $Type_raw/$ * const praw  ==> Output: Pointer to the signal rawdata object
  */
RC_t $NAME/$_scaleD2R( const $Type_app/$ * const pvalue, $Type_raw/$ * const praw);

#ifdef  __cplusplus
}
#endif

#endif /* SWC_ENGINE_TYPE_H_ */

